MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[205]: Found directive in column 1. (List)
                      00001 List      P=16f690              ; list directive to define processor
                      00002 #include "/usr/share/gputils/header/p16f690.inc"
                      00001         LIST
                      00002 ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00607         LIST
                      00003 ; IMPORTATNT! All the speedlib pre definitions, MUST be definde before the include
                      00004 #define ARC_16F         1
                      00005 ;#define ARC_18F         1
                      00006 #define REC_CUSTOM_JUMP     custom_command_handler
                      00007 #define CUSTOM_INTERRUPT    c_intserv
                      00008 #define DEV_ID1 35
                      00009 #define DEV_ID2 98
                      00010 #include "../SpeedBus.PIC.Lib.X/speedlib_main.asm"
                      00001 ;#include "/usr/share/gputils/header/p16f690.inc"
                      00002 ;            errorlevel -302
                      00003 
                      00004 ;
                      00005 ;   #define     REC_CUSTOM_JUMP         custom_command_handler ; This is the name of the command to use,
                             if it is a custom command. like, "jump to this statment if it is a custom command"
                      00006 ;   #define     CUSTOM_INTERRUPT        c_intserv              ; NOTE: When use this define, remember th
                            at the jumpback, to the ordinary interupthandler, need to be "ci_restore", if the interupt does 
                      00007 ;
                      00008 ;
                      00009 ; Using two device id:s, maybe not predefined, so...
                      00010 ; The definition of thease bytes should not be done in the lib file, but in the main asm file, so difren
                            t deviceid:s on difrent sources can be used.
                      00011 
                      00012 ; REMEMBER: Well, byte 0-9 is reserved for speedbus in eeprom
                      00013 
                      00014 ; The I/O where the txen for the 485buss should be output
                      00015 #ifndef OUTREG
                      00016 #define OUTREG PORTB
                      00017 #endif
                      00018 #ifndef OUTNUM
                      00019 #define OUTNUM 4
                      00020 #endif
                      00021 
                      00022 
                      00023 #ifndef DEV_ID1
                      00024 #define DEV_ID1 0
                      00025 #endif
                      00026 #ifndef DEV_ID2
                      00027 #define DEV_ID2 0
                      00028 #endif
                      00029 
                      00030 #ifndef FSR
                      00031 #define FSR FSR1L
                      00032 #endif
                      00033 
                      00034 #ifndef INDF
                      00035 #define INDF INDF1
                      00036 #endif
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00037 
                      00038 #ifndef EEDAT
                      00039 #define EEDAT EEDATA
                      00040 #endif
                      00041 
                      00042 #define SPEEDLIB_RESPONSE_DELAY 9
                      00043 
                      00044         radix dec
                      00045 ; IMPORTANT, do NOT change any of the varables down here, to a new bank, because
                      00046 ; the banksel instructions are configured, as all the varables bellow are in the
                      00047 ; same bank. As they should be.
                      00048 #define     USER_VARIABLE_SPACE         0x68    ; 0x66 but added two, just in case
                      00049         cblock  0x20
  00000020            00050              d1                 ; Define three file registers for the
  00000021            00051              d2                 ; delay loop
  00000022            00052              d3
  00000023            00053              d4
  00000024            00054              tmp_W
  00000025            00055              tmp_STATUS
  00000026            00056              tmp_PCLATH
  00000027            00057              d1_tmp
  00000028            00058              d2_tmp
  00000029            00059              d3_tmp
  0000002A            00060              rand
  0000002B            00061              loop1              ; Loop mem 1
  0000002C            00062              loop2              ; Loop mem 2
  0000002D            00063              rc_listen          ; |X-------|b7 = NoNE
                      00064                                 ; |-X------|b6 = NoNE
                      00065                                 ; |--X-----|b5 = NoNE
                      00066                                 ; |---X----|b4 = This bit specifies, that when reciving an 0x01, destion
                            ated for ME, do not send a "is ocupied package". This is good if you want to "search for units"
                      00067                                 ; |----X---|b3 = This bit got set if the device recive a usual response 
                            package (0x00)
                      00068                                 ; |-----X--|b2 = This is an internal function for the recsave rutine, so
                             the cewd know that following byte is escaped.
                      00069                                 ; |------X-|b1 = If you set this bit to 1 the cewd will handle the byte 
                            as loopback, and if it dosent match the byte in rc_nocoll
                      00070                                 ; |-------X|b0 = If you set this bit to one, when the device recives a "
                            is ocupied" pack, itn will uncheck this bit.
                      00071                                 ;                If this bit is zero, the device will send a "i am ocupi
                            ed" pack.
  0000002E            00072              rc_counter         ; RC framelen
  0000002F            00073              rc_gotflag         ; Set to 1 if it "got a flag"
  00000030            00074              rc_nocoll          ; Use this to confim that no collission has ocurred
  00000031            00075              rc_add_byte        ; recsave_add temporary argument
  00000032            00076              rsp_adress1        ; The response adress at the bus
  00000033            00077              rsp_adress2        ; The response adress at the bus
  00000034            00078              adress1            ; The adress at the bus
  00000035            00079              adress2            ; The adress at the bus
  00000036            00080              speedlib_config    ; |X-------|b7 = NoNE
                      00081                                 ; |-X------|b6 = NoNE
                      00082                                 ; |--X-----|b5 = NoNE
                      00083                                 ; |---X----|b4 = NoNE
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00084                                 ; |----X---|b3 = NoNe
                      00085                                 ; |-----X--|b2 = NoNe
                      00086                                 ; |------X-|b1 = Set this bit 1 if adress is stamped.
                      00087                                 ; |-------X|b0 = On, Off this bit, if you want to make the device check 
                            the adress on startup.
  00000037            00088              speedlib_main      ; |X-------|b7 = NoNE
                      00089                                 ; |-X------|b6 = NoNE
                      00090                                 ; |--X-----|b5 = NoNE
                      00091                                 ; |---X----|b4 = NoNE
                      00092                                 ; |----X---|b3 = NoNe
                      00093                                 ; |-----X--|b2 = If this bit got set, the cewd will send a response pack
                            age when returning to restore
                      00094                                 ; |------X-|b1 = This bit should be set, if the device has sent an packa
                            ge, that should be responde to
                      00095                                 ; |-------X|b0 = This bit, is SET when an interupt has occured. If you s
                            et this to zero before youre rutine, and check the bit after, you will se if an interupt has ocu
  00000038            00096              crc0
  00000039            00097              crc1
  0000003A            00098              crcloop
  0000003B            00099              crctmp
  0000003C            00100              framelen           ; TX framelen
  0000003D            00101              txtmp              ; temporary before sending
  0000003E            00102              txreturn           ; Hardcoded return, if nessesary(in interupts)
  0000003F            00103              txframe, tx1, tx2, tx3, tx4, tx5, tx6, tx7, tx8, tx9, tx10 ; Current package limit, 20B
  0000004A            00104              tx11, tx12, tx13, tx14, tx15, tx16, tx17, tx18, tx19, tx20
  00000054            00105              rcframe, rc1, rc2, rc3, rc4, rc5, rc6, rc7, rc8, rc9, rc10 ; Current package limit, 20B
  0000005F            00106              rc11, rc12, rc13, rc14, rc15, rc16, rc17, rc18, rc19, rc20
                      00107         endc
                      00108         ;; EEPROM
                      00109         ;; 0x00 ; addr1
                      00110         ;; 0x01 ; addr2
                      00111         ;; 0x02 ; Speedbus configuration register
                      00112 
                      00113 .code_page0_ CODE
                      00114 
0000                  00115 init_speedlib:
                      00116 #ifndef FSR
                      00117     clrf    FSR1H
                      00118 #endif
                      00119 
                      00120 
                      00121     ;; Preset some values
0000   1283 1303      00122     banksel speedlib_main
0002   1137           00123     bcf     speedlib_main,2
0003   10B7           00124     bcf     speedlib_main,1
0004   1283 1303      00125     banksel OUTREG
0006   1206           00126     bcf     OUTREG,OUTNUM
0007   1283 1303      00127     banksel rc_listen
0009   10AD           00128     bcf     rc_listen,1
000A   122D           00129     bcf     rc_listen,4
000B   10BE           00130     bcf     txreturn, 1
                      00131 
                      00132 #ifdef  READ_EEPROM
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00133     ;; Take adress from eeprom, if it is set.
                      00134     movlw   0
                      00135     call    READ_EEPROM
                      00136     banksel adress1
                      00137     movwf   adress1
                      00138     movlw   1
                      00139     call    READ_EEPROM
                      00140     banksel adress2
                      00141     movwf   adress2
                      00142     movlw   2
                      00143     call    READ_EEPROM
                      00144     banksel speedlib_config
                      00145     movwf   speedlib_config
                      00146 #endif
000C   1836           00147     btfsc   speedlib_config,0
000D   2???           00148     call    init_checkaddr
                      00149 
                      00150     ; If adress is 0xFFFF, force init_checkaddr
000E   30FF           00151     movlw       0xFF
000F   1283 1303      00152     banksel     adress1
0011   0234           00153     subwf       adress1,W
0012   1D03           00154     btfss       STATUS,Z
0013   2???           00155     goto        init_speedlib_e
0014   30FF           00156     movlw       0xFF
0015   1283 1303      00157     banksel     adress2
0017   0235           00158     subwf       adress2,W
0018   1D03           00159     btfss       STATUS,Z
0019   2???           00160     goto        init_speedlib_e
001A   1283 1303      00161     banksel     adress1
001C   01B4           00162     clrf        adress1
001D   01B5           00163     clrf        adress2
001E   2???           00164     call        init_checkaddr
                      00165 
001F                  00166 init_speedlib_e:
                      00167 
001F   0008           00168     return
                      00169 
0020                  00170 init_checkaddr:
0020   1283 1303      00171     banksel rc_listen
0022   102D           00172     bcf     rc_listen,0
0023   3003           00173         movlw   3
0024   00AB           00174         movwf   loop1
                      00175 
0025                  00176 init_checkaddr_l:
0025   1283 1303      00177     banksel rc_listen
0027   142D           00178         bsf     rc_listen,0
                      00179 
0028   1283 1303      00180     banksel framelen
                      00181 
                      00182         ;; Send porta over TX
002A   3009           00183         movlw   9
002B   00BC           00184         movwf   framelen
                      00185         ;; * adress
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002C   0834           00186         movf    adress1,W
002D   00BF           00187         movwf   txframe 
                      00188         ;; * adress
002E   0835           00189         movf    adress2,W
002F   00C0           00190         movwf   txframe+1
                      00191         ;; 0xff broadcast adress
0030   30FF           00192         movlw   0xff
0031   00C1           00193         movwf   txframe+2
                      00194         ;; 0xff broadcast adress
0032   30FF           00195         movlw   0xff
0033   00C2           00196         movwf   txframe+3
                      00197         ;; 0x03 control bit
0034   3003           00198         movlw   0x03
0035   00C3           00199         movwf   txframe+4
                      00200         ;; 0x01 protocoll
0036   3000           00201     movlw   0x00
0037   00C4           00202         movwf   txframe+5
                      00203         ;; Data
0038   3001           00204     movlw       0x01
0039   00C5           00205         movwf   txframe+6
                      00206         ;; Padding bit
003A   3000           00207         movlw   0x00
003B   00C6           00208     movwf   txframe+7
                      00209 
                      00210 
003C   2???           00211         call    txdo
                      00212 
003D   300A           00213         movlw   10
003E   2???           00214         call    Delay
003F   1283 1303      00215     banksel rc_listen
0041   182D           00216         btfsc   rc_listen,0
0042   2???           00217         goto    init_checkaddr_not_ocupied
0043   2???           00218         goto    setaddr
                      00219 
0044                  00220 init_checkaddr_not_ocupied:
0044   1283 1303      00221     banksel loop1
0046   0BAB           00222         decfsz  loop1, f
0047   2???           00223         goto    init_checkaddr_l
0048   102D           00224         bcf     rc_listen,0
0049   0008           00225         return
                      00226 
004A                  00227 setaddr:
004A   1283 1303      00228     banksel adress1
004C   3000           00229         movlw   0x00
004D   00B4           00230         movwf   adress1
004E   3000           00231         movlw   0x00
004F   00B5           00232         movwf   adress2
                      00233 
0050                  00234 setaddr1:       
0050   1283 1303      00235         banksel adress2
                      00236 
0052   0FB5           00237         incfsz  adress2, f
0053   2???           00238         goto    setaddr2
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00239 
0054   3000           00240         movlw   0x00
0055   00AC           00241         movwf   loop2
                      00242 
0056   0FB4           00243         incfsz  adress1, f
0057   2???           00244         goto    setaddr2
0058   0008           00245         return                  ; ALERT!!! Change this to a rutin that show an error that no adress is a
                            vailible (all ~65535 is taken)
                      00246 
0059                  00247 setaddr2:
0059   1283 1303      00248     banksel rc_listen
005B   142D           00249         bsf     rc_listen,0
                      00250 
                      00251         ;; Send porta over TX
005C   3009           00252         movlw   9
005D   00BC           00253         movwf   framelen
                      00254         ;; * adress
005E   0834           00255         movf    adress1,W
005F   00BF           00256         movwf   txframe 
                      00257         ;; * adress
0060   0835           00258         movf    adress2,W
0061   00C0           00259         movwf   txframe+1
                      00260         ;; 0xff broadcast adress
0062   30FF           00261         movlw   0xff
0063   00C1           00262         movwf   txframe+2
                      00263         ;; 0xff broadcast adress
0064   30FF           00264         movlw   0xff
0065   00C2           00265         movwf   txframe+3
                      00266         ;; 0x03 control bit
0066   3003           00267         movlw   0x03
0067   00C3           00268         movwf   txframe+4
                      00269         ;; 0x01 protocoll
0068   3000           00270         movlw   0x00
0069   00C4           00271         movwf   txframe+5
                      00272         ;; Data
006A   3001           00273         movlw   0x01
006B   00C5           00274         movwf   txframe+6
                      00275         ;; Padding bit
006C   3000           00276         movlw   0x00
006D   00C6           00277         movwf   txframe+7
                      00278 
                      00279 
006E   2???           00280         call    txdo
                      00281 
006F   300A           00282         movlw   10
0070   2???           00283         call    Delay
0071   1283 1303      00284     banksel rc_listen
0073   182D           00285         btfsc   rc_listen,0
0074   2???           00286         goto    setaddr_testloop
0075   2???           00287         goto    setaddr1
                      00288 
                      00289         
0076                  00290 setaddr_testloop:               ; Send this rutine another 2 times, to make sure that the previus packet
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             not was droped
0076   1283 1303      00291         banksel loop1
0078   3002           00292         movlw   2
0079   00AB           00293         movwf   loop1
007A                  00294 setaddr_testloop_l:     
                      00295 
007A   2???           00296         call    txdo
                      00297 
007B   300A           00298         movlw   10
007C   2???           00299         call    Delay
007D   1283 1303      00300     banksel rc_listen
007F   1C2D           00301         btfss   rc_listen,0
0080   2???           00302         goto    setaddr1
0081   0BAB           00303         decfsz  loop1,  f
0082   2???           00304         goto    setaddr_testloop_l
0083   0008           00305         return                  ; The adress sems nice! Returning, and keep the composed adress!
                      00306         
                      00307         
                      00308         
0084                  00309 intserv:
                      00310 
0084   1283 1303      00311         banksel speedlib_main
0086   1437           00312         bsf     speedlib_main,0 ;       Set this bit to one, when an interupt ocurres
                      00313 
                      00314 
0087   1CB7           00315         btfss   speedlib_main,1         ;; Waiting for response STATE? Jump direct to recend_no_broadcas
                            t
0088   2???           00316         goto    intserv_norm
0089   1283 1303      00317         banksel PIR1
008B   1A8C           00318         btfsc   PIR1,RCIF       ;       Check if the recived data bit is set
008C   2???           00319             goto        rec             ;       Jump to recive data rutine if the PIR1 bit is 1
008D   2???           00320         goto    restore
                      00321 
008E                  00322 intserv_norm:
008E   1283 1303      00323         banksel tmp_W
0090   00A4           00324         movwf   tmp_W           ;       Register BKP before the interup code exec
0091   0803           00325         movf    STATUS,W
0092   0183           00326         clrf    STATUS
0093   00A5           00327         movwf   tmp_STATUS
0094   080A           00328         movf    PCLATH,W
0095   00A6           00329         movwf   tmp_PCLATH
0096   0820           00330         movf    d1,W
0097   00A7           00331         movwf   d1_tmp
0098   0821           00332         movf    d2,W
0099   00A8           00333         movwf   d2_tmp
009A   0822           00334         movf    d3,W
009B   00A9           00335         movwf   d3_tmp
                      00336         #ifdef  CUSTOM_INTERRUPT
009C   2???           00337         goto    CUSTOM_INTERRUPT
009D                  00338 ci_restore:
                      00339         #endif
                      00340 
009D   1283 1303      00341         banksel PIR1
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009F   1A8C           00342         btfsc   PIR1,RCIF       ;       Check if the recived data bit is set
00A0   2???           00343         goto    rec             ;       Jump to recive data rutine if the PIR1 bit is 1
                      00344 
                      00345 
00A1                  00346 restore:
00A1   1283 1303      00347         banksel speedlib_main   ;       Restore the regisers
00A3   18B7           00348         btfsc   speedlib_main,1         ;; Waiting for response STATE? Dont
00A4   0009           00349         retfie                          ;; restore saved, nothing is saved
                      00350 
                      00351         ;; If:  Send back a response package, to confirm that the package has been recived
                      00352 ;        btfss   speedlib_main,2
                      00353 ;        goto    restore_norm
                      00354 ;        bcf     speedlib_main,2
                      00355 ;        call    func_send_response
                      00356         ;;
                      00357 
00A5                  00358 restore_norm:
                      00359 
                      00360     
00A5   0827           00361         movf    d1_tmp,W
00A6   00A0           00362         movwf   d1
00A7   0828           00363         movf    d2_tmp,W
00A8   00A1           00364         movwf   d2
00A9   0829           00365         movf    d3_tmp,W
00AA   00A2           00366         movwf   d3      
00AB   0826           00367         movf    tmp_PCLATH,W
00AC   008A           00368         movwf   PCLATH
00AD   0825           00369         movf    tmp_STATUS,W
00AE   0083           00370         movwf   STATUS
00AF   0EA4           00371         swapf   tmp_W,F
00B0   0E24           00372         swapf   tmp_W,W
00B1   0009           00373         retfie
                      00374         
                      00375 
00B2                  00376 rec:
00B2   1283 1303      00377         banksel rc_listen
00B4   1CAD           00378         btfss   rc_listen,1             ; If rc_listen is set to NOT drop the loopback package, jump dir
                            ectly to the rec_start
00B5   2???           00379         goto    rec_start               
                      00380 
00B6   10AD           00381         bcf     rc_listen,1             ;; Start this rutine with checking that the recived bit NOT was 
                            send from this own device
00B7   0830           00382         movf    rc_nocoll,W
00B8   1283 1303      00383         banksel RCREG
00BA   021A           00384         subwf   RCREG,W
00BB   1D03           00385         btfss   STATUS,Z
00BC   2???           00386         goto    rec_oops_coll           ; Anyway, if the rc_listen,1  is 1, and it do not match RCREG, w
                            e may be detected an collission
00BD   2???           00387         goto    restore
00BE                  00388 rec_oops_coll:
                      00389 ;       banksel PORTC
                      00390 ;       bsf     PORTC,0
00BE   1283 1303      00391         banksel txreturn
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C0   14BE           00392         bsf     txreturn,1
00C1   2???           00393         goto    restore
                      00394         
00C2                  00395 rec_start:
00C2   1283 1303      00396         banksel RCREG
00C4   307E           00397         movlw   0x7e
00C5   021A           00398         subwf   RCREG,W
00C6   1903           00399         btfsc   STATUS,Z
00C7   2???           00400         goto    recx            ; Jump if this is a flag bit
00C8   1283 1303      00401         banksel rc_gotflag
00CA   182F           00402         btfsc   rc_gotflag,0
00CB   2???           00403         goto    recsave         ; Jump if the flag bit is set
00CC   2???           00404         goto    recr
00CD                  00405 recx:
00CD   1283 1303      00406         banksel rc_gotflag
00CF   182F           00407         btfsc   rc_gotflag,0
00D0   2???           00408         goto    recend          ; If this may be end flag, check the package, finalize, check crc
00D1   142F           00409         bsf     rc_gotflag,0    ; Else set the gotflag, and start recording package!
00D2   01AE           00410         clrf    rc_counter      ; Clear the counter :)
00D3   2???           00411         goto    restore
00D4                  00412 recr:   
                      00413         ;       movf    RCREG,W
                      00414         ;       movwf   TXREG           
00D4   2???           00415         goto    restore
                      00416 
00D5                  00417 recsave:
00D5   1283 1303      00418         banksel RCREG
00D7   307D           00419         movlw   0x7d
00D8   021A           00420         subwf   RCREG,W
00D9   1903           00421         btfsc   STATUS,Z
00DA   2???           00422         goto    recsave_set     ; Set bit in the rc_listen to aktivate escape routines when the next byt
                            e is recived
00DB   1283 1303      00423         banksel rc_listen
00DD   192D           00424         btfsc   rc_listen,2
00DE   2???           00425         goto    recsave_unescape
                      00426 
00DF   1283 1303      00427         banksel RCREG
00E1   081A           00428         movf    RCREG,W
00E2   2???           00429         goto    recsave_add
                      00430 
00E3                  00431 recsave_set:
00E3   1283 1303      00432         banksel rc_listen
00E5   152D           00433         bsf     rc_listen,2
00E6   2???           00434         goto    restore
                      00435 
00E7                  00436 recsave_unescape:
00E7   1283 1303      00437         banksel rc_listen
00E9   112D           00438         bcf     rc_listen,2
00EA   305E           00439         movlw   0x5e
00EB   1283 1303      00440         banksel RCREG
00ED   021A           00441         subwf   RCREG,W
00EE   1903           00442         btfsc   STATUS,Z
00EF   2???           00443         goto    recsave_unescape_1
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F0   305D           00444         movlw   0x5d
00F1   021A           00445         subwf   RCREG,W
00F2   1903           00446         btfsc   STATUS,Z
00F3   2???           00447         goto    recsave_unescape_2
00F4   2???           00448         goto    restore         ; Maybe you can change this, but a fail package that is the result, will
                             also be CRC checked
                      00449         
00F5                  00450 recsave_unescape_1:
00F5   307E           00451         movlw   0x7e
00F6   2???           00452         goto    recsave_add
00F7                  00453 recsave_unescape_2:
00F7   307D           00454         movlw   0x7d
00F8   2???           00455         goto    recsave_add
                      00456         
00F9                  00457 recsave_add:
00F9   1283 1303      00458         banksel rc_add_byte
00FB   00B1           00459         movwf   rc_add_byte
00FC   3054           00460         movlw   rcframe         ; Place where to put the receiving byte
00FD   072E           00461         addwf   rc_counter,W    ; Add the number in rc_flow, to the pointer, like rcframe[rc_flow] 
00FE   1283 1303      00462         banksel FSR
0100   0084           00463         movwf   FSR
0101   1283 1303      00464         banksel rc_add_byte
0103   0831           00465         movf    rc_add_byte,W
0104   1283 1303      00466         banksel INDF
0106   0080           00467         movwf   INDF
0107   1283 1303      00468         banksel rc_counter
0109   0AAE           00469         incf    rc_counter,F
010A   2???           00470         goto    restore
                      00471         
010B                  00472 recend:
010B   3005           00473     movlw   5
010C   022E           00474     subwf   rc_counter,W
010D   1C03           00475     btfss   STATUS,C
010E   2???           00476     goto    reccrcfail
010F   1283 1303      00477     banksel rc_counter
0111   032E           00478         decf    rc_counter,W
0112   00AE           00479         movwf   rc_counter
0113   00BA           00480         movwf   crcloop
0114   3054           00481         movlw   rcframe
0115   1283 1303      00482     banksel FSR
0117   0084           00483         movwf   FSR
0118   1283 1303      00484     banksel crc0
011A   01B8           00485         clrf    crc0
011B   01B9           00486         clrf    crc1
011C   2???           00487         call    crcloopr        ; Call CRC function
                      00488 
011D   1283 1303      00489         banksel rcframe
011F   3054           00490         movlw   rcframe
0120   072E           00491         addwf   rc_counter,W
0121   1283 1303      00492         banksel FSR
0123   0084           00493         movwf   FSR
                      00494 
0124   1283 1303      00495         banksel INDF
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0126   0800           00496         movf    INDF,W
                      00497 
0127   1283 1303      00498         banksel crc1
0129   0239           00499         subwf   crc1,W
012A   1D03           00500         btfss   STATUS,Z
012B   2???           00501         goto    reccrcfail
012C   1283 1303      00502         banksel FSR
012E   0304           00503         decf    FSR,W
012F   0084           00504         movwf   FSR
                      00505 
0130   1283 1303      00506         banksel INDF
0132   0800           00507         movf    INDF,W
                      00508 
0133   1283 1303      00509         banksel crc0
0135   0238           00510         subwf   crc0,W
0136   1D03           00511         btfss   STATUS,Z
0137   2???           00512         goto    reccrcfail
                      00513 
                      00514         
                      00515         ;; fix so that the cheksum is check:ed and do things ;)
                      00516 
                      00517         ;; REMEMBER, if checksum is right, clear rc_gotflag, else, untuched
0138   1283 1303      00518         banksel rc_gotflag
013A   102F           00519         bcf     rc_gotflag,0
                      00520 
013B   305A           00521         movlw   rcframe+6       ; Move recived byte to W
013C   1283 1303      00522         banksel FSR
013E   0084           00523         movwf   FSR
                      00524 
013F                  00525 recend_tmp:
                      00526 
013F   1283 1303      00527         banksel speedlib_main
0141   18B7           00528         btfsc   speedlib_main,1 ; No CUSTOM command when in Whait for RESP STATE
0142   2???           00529         goto    recend_no_broadcast
                      00530 
                      00531 
0143   2???           00532         goto    func_bc
                      00533 
0144                  00534 recend_no_broadcast:
                      00535 
0144   1283 1303      00536         banksel rcframe
0146   3054           00537         movlw   rcframe
0147   1283 1303      00538         banksel FSR
0149   0084           00539         movwf   FSR
014A   1283 1303      00540         banksel INDF
014C   0800           00541         movf    INDF,W          ; Check so that the adress is destinated for me
014D   1283 1303      00542         banksel adress1
014F   0234           00543         subwf   adress1,W
0150   1D03           00544         btfss   STATUS,Z
0151   2???           00545         goto    restore
0152   1283 1303      00546         banksel FSR
0154   0A04           00547         incf    FSR,W
0155   0084           00548         movwf   FSR
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0156   1283 1303      00549         banksel INDF
0158   0800           00550         movf    INDF,W
0159   1283 1303      00551         banksel adress2
015B   0235           00552         subwf   adress2,W
015C   1D03           00553         btfss   STATUS,Z
015D   2???           00554         goto    restore
                      00555 
015E   305A           00556         movlw   rcframe+6       ; Move recived byte to W
015F   1283 1303      00557         banksel FSR
0161   0084           00558         movwf   FSR
                      00559 
0162   3000           00560         movlw   0x00            ; Got response
0163   1283 1303      00561         banksel INDF
0165   0200           00562         subwf   INDF,W
0166   1903           00563         btfsc   STATUS,Z
0167   2???           00564         goto    func_check_response
                      00565 
0168   1283 1303      00566         banksel speedlib_main
016A   18B7           00567         btfsc   speedlib_main,1 ; No CUSTOM command when in Whait for RESP STATE
016B   2???           00568         goto    restore
                      00569 
016C   0859           00570         movf    rcframe+5,W
016D   3C01           00571         sublw   0x01
016E   1903           00572         btfsc   STATUS,Z
016F   2???           00573         call    func_send_response
                      00574 ;        bsf     speedlib_main,2 ; Set this bit, so the cewd knows that WHEN
                      00575 ;        btfss  STATUS,Z        ; returning to restore, send a response package
                      00576 ;        bcf     speedlib_main,2
                      00577 
                      00578 
                      00579         ;; Make sure that the FSR pointer is pointed right
0170   305A           00580         movlw   rcframe+6       ; Move recived byte to W
0171   1283 1303      00581         banksel FSR
0173   0084           00582         movwf   FSR
                      00583 
0174   3001           00584         movlw   0x01            ; Send respons for, 0x01 message, destionated for me
0175   1283 1303      00585         banksel INDF
0177   0200           00586         subwf   INDF,W
0178   1903           00587         btfsc   STATUS,Z
0179   2???           00588         goto    func_is_ocupied_send_response
                      00589         
017A   3002           00590         movlw   0x02
017B   0200           00591         subwf   INDF,W
017C   1903           00592         btfsc   STATUS,Z
017D   2???           00593         goto    func_setport
                      00594 
017E   3003           00595         movlw   0x03
017F   0200           00596         subwf   INDF,W
0180   1903           00597         btfsc   STATUS,Z
0181   2???           00598         goto    func_speedlib_config
                      00599 
                      00600 #ifdef  REC_CUSTOM_JUMP
0182   2???           00601         goto    REC_CUSTOM_JUMP
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00602 #endif
0183   2???           00603         goto    restore
                      00604 
0184                  00605 func_speedlib_config:
0184   3009           00606         movlw   9
0185   1283 1303      00607         banksel rc_counter
0187   022E           00608         subwf   rc_counter,W
0188   1903           00609         btfsc   STATUS,Z
0189   2???           00610         goto    func_speedlib_config_basics
                      00611 
018A   1803           00612         btfsc   STATUS,C
018B   2???           00613         goto    func_speedlib_config_extended
018C   2???           00614         goto    restore
                      00615 
018D                  00616 func_speedlib_config_extended:
018D   305B           00617         movlw   rcframe+7       ; Move recived byte to W
018E   1283 1303      00618         banksel FSR
0190   0084           00619         movwf   FSR
0191   3000           00620         movlw   0x00
0192   1283 1303      00621         banksel INDF
0194   0200           00622         subwf   INDF,W
0195   1903           00623         btfsc   STATUS,Z
0196   2???           00624         goto    func_speedlib_config_basics
0197   3001           00625         movlw   0x01
0198   0200           00626         subwf   INDF,W
0199   1903           00627         btfsc   STATUS,Z
019A   2???           00628         goto    func_speedlib_config_caddr
019B   2???           00629         goto    restore
                      00630 
                      00631 
019C                  00632 func_speedlib_config_caddr:
019C   300C           00633         movlw   12
019D   1283 1303      00634         banksel rc_counter
019F   022E           00635         subwf   rc_counter,W
01A0   1C03           00636         btfss   STATUS,C    ;; If rc_counter NOT is more och equal to twelve, jump back
01A1   2???           00637         goto    restore
                      00638 
01A2   2???           00639         call    func_send_response
                      00640         
01A3   305C           00641         movlw   rcframe+8       ; Move recived byte to W
01A4   1283 1303      00642         banksel FSR
01A6   0084           00643         movwf   FSR
01A7   30FF           00644         movlw   0xFF
01A8   1283 1303      00645         banksel INDF
01AA   0200           00646         subwf   INDF,W
01AB   1D03           00647         btfss   STATUS,Z
01AC   2???           00648         goto    func_speedlib_config_caddr_f
01AD   1283 1303      00649         banksel FSR
01AF   0A84           00650         incf    FSR,F
01B0   30FF           00651         movlw   0xFF
01B1   1283 1303      00652         banksel INDF
01B3   0200           00653         subwf   INDF,W
01B4   1D03           00654         btfss   STATUS,Z
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B5   2???           00655         goto    func_speedlib_config_caddr_f
01B6   2???           00656         goto    restore
                      00657 
01B7                  00658 func_speedlib_config_caddr_f:
                      00659 
01B7   305C           00660         movlw   rcframe+8       ; Move recived byte to W
01B8   1283 1303      00661         banksel FSR
01BA   0084           00662         movwf   FSR
01BB   1283 1303      00663         banksel INDF
01BD   0800           00664         movf    INDF,W
01BE   1283 1303      00665         banksel adress1
01C0   00B4           00666         movwf   adress1
01C1   1283 1303      00667         banksel FSR
01C3   0A84           00668         incf    FSR,f
01C4   1283 1303      00669         banksel INDF
01C6   0800           00670         movf    INDF,W
01C7   1283 1303      00671         banksel adress2
01C9   00B5           00672         movwf   adress2
                      00673 
01CA   14B6           00674         bsf     speedlib_config,1
                      00675 #ifdef  WRITE_EEPROM
                      00676         ;; Here you probobly want some cewd that writes tha adress to eeprom
                      00677         movlw   0
                      00678         movwf   rc_nocoll
                      00679         movf    adress1,W
                      00680         call    WRITE_EEPROM
                      00681         banksel rc_nocoll
                      00682         movlw   1
                      00683         movwf   rc_nocoll
                      00684         movf    adress2,W
                      00685         call    WRITE_EEPROM
                      00686         banksel rc_nocoll
                      00687         movlw   2
                      00688         movwf   rc_nocoll
                      00689         movf    speedlib_config,W
                      00690         call    WRITE_EEPROM
                      00691 #endif
01CB   2???           00692         goto    restore
                      00693 
01CC                  00694 func_speedlib_config_basics:
01CC   300C           00695         movlw   12
01CD   2???           00696         call    Delay
01CE   300B           00697         movlw   11
01CF   1283 1303      00698         banksel framelen
01D1   00BC           00699         movwf   framelen
                      00700         ;; 0xff broadcast dst adress
01D2   3056           00701         movlw   rcframe+2         ;       dst addr
01D3   1283 1303      00702         banksel FSR
01D5   0084           00703         movwf   FSR
01D6   1283 1303      00704         banksel INDF
01D8   0800           00705         movf    INDF,W
01D9   1283 1303      00706         banksel txframe
01DB   00BF           00707         movwf   txframe
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00708         ;; 0xff broadcast dst adress
01DC   3057           00709         movlw   rcframe+3         ;       dst addr
01DD   1283 1303      00710         banksel FSR
01DF   0084           00711         movwf   FSR
01E0   1283 1303      00712         banksel INDF
01E2   0800           00713         movf    INDF,W
01E3   1283 1303      00714         banksel txframe
01E5   00C0           00715         movwf   txframe+1
                      00716         ;; * my own src adress
01E6   0834           00717         movf    adress1, W
01E7   00C1           00718         movwf   txframe+2
                      00719         ;; * my own src adress
01E8   0835           00720         movf    adress2, W
01E9   00C2           00721         movwf   txframe+3
                      00722         ;; 0x03 control bit
01EA   3003           00723         movlw   0x03
01EB   00C3           00724         movwf   txframe+4
                      00725         ;; 0x01 protocoll
01EC   3000           00726         movlw   0x00
01ED   00C4           00727         movwf   txframe+5
                      00728         ;; Data
01EE   3003           00729         movlw   0x03
01EF   00C5           00730         movwf   txframe+6
                      00731         ;; 0x00 Basic config response
01F0   3000           00732         movlw   0x00
01F1   00C6           00733         movwf   txframe+7
                      00734         ;; Send back speedlib_config
01F2   3036           00735         movlw   speedlib_config
01F3   00C7           00736         movwf   txframe+8
                      00737         ;; Padding bit
01F4   3000           00738         movlw   0x00
01F5   00C8           00739         movwf   txframe+9
                      00740 
01F6   2???           00741         call    txdo
01F7   2???           00742         goto    restore
                      00743 
01F8                  00744 func_send_response:
01F8   3009           00745     movlw   SPEEDLIB_RESPONSE_DELAY
01F9   2???           00746     call    Delay
01FA   1283 1303      00747     banksel framelen
01FC   3009           00748         movlw   9
01FD   00BC           00749         movwf   framelen
                      00750         ;; 0xff broadcast dst adress
01FE   3056           00751     movlw       rcframe+2         ;       dst addr
01FF   1283 1303      00752     banksel FSR
0201   0084           00753     movwf       FSR
0202   1283 1303      00754     banksel INDF
0204   0800           00755     movf    INDF,W
0205   1283 1303      00756     banksel txframe
0207   00BF           00757         movwf   txframe
                      00758         ;; 0xff broadcast dst adress
0208   3057           00759     movlw       rcframe+3         ;       dst addr
0209   1283 1303      00760         banksel FSR
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

020B   0084           00761     movwf       FSR
020C   1283 1303      00762     banksel INDF
020E   0800           00763     movf    INDF,W
020F   1283 1303      00764     banksel txframe
0211   00C0           00765         movwf   txframe+1
                      00766         ;; * my own src adress
0212   0834           00767         movf    adress1, W
0213   00C1           00768         movwf   txframe+2
                      00769         ;; * my own src adress
0214   0835           00770         movf    adress2, W
0215   00C2           00771         movwf   txframe+3
                      00772         ;; 0x03 control bit
0216   3003           00773         movlw   0x03
0217   00C3           00774         movwf   txframe+4
                      00775         ;; 0x01 protocoll
0218   3000           00776     movlw   0x00        ; No response on response
0219   00C4           00777         movwf   txframe+5   
                      00778         ;; Data             
021A   3000           00779     movlw       0x00
021B   00C5           00780         movwf   txframe+6
                      00781         ;; Padding bit
021C   3000           00782         movlw   0x00
021D   00C6           00783     movwf   txframe+7
                      00784 
                      00785         ;; This is a broadcast package with adress on it
                      00786 
021E   2???           00787         call    txdo
021F   0008           00788         return
                      00789 
0220                  00790 func_check_response:
                      00791 ; May be more advanced in the future, but for now, i dont se any reason why
                      00792 ; we should make this functione more advanced, how many response packages are
                      00793 ; realy exchange in a cuple of ms? -.- //  Speedster
0220   1283 1303      00794         banksel rc_listen
0222   15AD           00795         bsf     rc_listen,3
0223   2???           00796         goto    restore
                      00797 
                      00798 
0224                  00799 func_is_ocupied_send_response:
0224   300C           00800         movlw   12              ; Pretty strange, but you need this, so no colission or somthing will be
                             made betwen PC and ansoring device
0225   2???           00801         call    Delay
0226   1283 1303      00802         banksel rc_listen
                      00803         ;; Send Package:
0228   182D           00804         btfsc   rc_listen,0
0229   2???           00805         goto    func_is_ocupied_send_response_got_resp
022A   2???           00806         goto    func_is_ocupied_send_response_pack
Warning[208]: Label truncated at 32 characters. (func_is_ocupied_send_response_got_resp)
022B                  00807 func_is_ocupied_send_response_got_resp:
022B   102D           00808         bcf     rc_listen,0
022C   2???           00809         goto    restore
                      00810 
Warning[208]: Label truncated at 32 characters. (func_is_ocupied_send_response_pack)
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022D                  00811 func_is_ocupied_send_response_pack:
022D   1A2D           00812         btfsc   rc_listen,4
022E   2???           00813         goto    restore
022F   3009           00814         movlw   9
0230   1283 1303      00815         banksel framelen
0232   00BC           00816         movwf   framelen
                      00817         ;; 0xff broadcast dst adress
0233   3056           00818         movlw   rcframe+2         ;       dst addr
0234   1283 1303      00819         banksel FSR
0236   0084           00820         movwf   FSR
0237   1283 1303      00821         banksel INDF
0239   0800           00822         movf    INDF,W
023A   1283 1303      00823         banksel txframe
023C   00BF           00824         movwf   txframe
                      00825         ;; 0xff broadcast dst adress
023D   3057           00826         movlw   rcframe+3         ;       dst addr
023E   1283 1303      00827         banksel FSR
0240   0084           00828         movwf   FSR
0241   1283 1303      00829         banksel INDF
0243   0800           00830         movf    INDF,W
0244   1283 1303      00831         banksel txframe
0246   00C0           00832         movwf   txframe+1
                      00833         ;; * my own src adress
0247   0834           00834         movf    adress1, W
0248   00C1           00835         movwf   txframe+2
                      00836         ;; * my own src adress
0249   0835           00837         movf    adress2, W
024A   00C2           00838         movwf   txframe+3
                      00839         ;; 0x03 control bit
024B   3003           00840         movlw   0x03
024C   00C3           00841         movwf   txframe+4
                      00842         ;; 0x01 protocoll
024D   3000           00843         movlw   0x00
024E   00C4           00844         movwf   txframe+5
                      00845         ;; Data
024F   3001           00846         movlw   0x01
0250   00C5           00847         movwf   txframe+6
                      00848         ;; Padding bit
0251   3000           00849         movlw   0x00
0252   00C6           00850         movwf   txframe+7
                      00851         
                      00852         ;; This is a broadcast package with adress on it
                      00853 
0253   2???           00854         call    txdo    
                      00855 
0254   2???           00856         goto    restore
                      00857 
                      00858         
0255                  00859 func_bc:
                      00860 ; 120623 A new era has become speedbus, all package that are need to, shall for
                      00861 ; now be sent with an respons, and, for that reason, i no more use command 0x00
                      00862 ; for is_occupied commands. When an 0x01 NOT is broadcast(it got a real adress)
                      00863 ; It is ment to bee like an old 0x00, if it is not an bc, send is_occupied.
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00864 ; For now on, 0x00 is used to respond packages that need a response! Over'n out
                      00865 ; // Speedster
                      00866 
0255   1283 1303      00867         banksel rcframe
0257   3054           00868         movlw   rcframe         ;       dst addr
0258   1283 1303      00869         banksel FSR
025A   0084           00870         movwf   FSR
                      00871         
025B   30FF           00872         movlw   0xFF            ;       check dst adress1
025C   1283 1303      00873         banksel INDF
025E   0200           00874         subwf   INDF,W
025F   1D03           00875         btfss   STATUS,Z
0260   2???           00876         goto    recend_no_broadcast
                      00877 
0261   1283 1303      00878         banksel FSR
0263   0A04           00879         incf    FSR,W           ;       Increase the address    
0264   0084           00880         movwf   FSR
                      00881 
0265   30FF           00882         movlw   0xFF            ;       check dst adress2
0266   1283 1303      00883         banksel INDF
0268   0200           00884         subwf   INDF,W
0269   1D03           00885         btfss   STATUS,Z
026A   2???           00886         goto    recend_no_broadcast
                      00887         
026B   305A           00888         movlw   rcframe+6        
026C   1283 1303      00889         banksel FSR
026E   0084           00890         movwf   FSR
026F   3001           00891         movlw   0x01
0270   1283 1303      00892         banksel INDF
0272   0200           00893         subwf   INDF,W
0273   1903           00894         btfsc   STATUS,Z
0274   2???           00895         goto    func_bc_01
                      00896 
                      00897 #ifdef  on_got_IAH
                      00898         movlw   0x03
                      00899         banksel INDF
                      00900         subwf   INDF,W
                      00901         btfss   STATUS,Z
                      00902         goto    restore
                      00903         banksel INDF
                      00904         incf    FSR, F
                      00905         movlw   0x01
                      00906         banksel INDF
                      00907         subwf   INDF,W
                      00908         btfss   STATUS,Z
                      00909         goto    restore
                      00910         goto    on_got_IAH
                      00911 #endif
0275   2???           00912         goto    restore
                      00913 
0276                  00914 func_bc_01:
0276   3059           00915         movlw   rcframe+5
0277   1283 1303      00916         banksel FSR
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0279   0084           00917         movwf   FSR
027A   3001           00918         movlw   0x01
027B   1283 1303      00919         banksel INDF
027D   0200           00920         subwf   INDF,W
027E   1903           00921         btfsc   STATUS,Z
027F   2???           00922         goto    func_bc_sendaddr
0280   3000           00923         movlw   0x00
0281   0200           00924         subwf   INDF,W
0282   1903           00925         btfsc   STATUS,Z
0283   2???           00926         call    func_send_response
0284   2???           00927         goto    restore
                      00928 
                      00929 
0285                  00930 func_bc_sendaddr:       
0285   2???           00931         call    trd      ; Three random delay:s before ansor broadcast
                      00932 
0286   2???           00933         call    func_set_rsp_addr ;; Set rsp_adress to the src adress of the last recived package
                      00934 
                      00935         ;; Send Package:
0287   1283 1303      00936         banksel framelen
0289   300B           00937         movlw   11
028A   00BC           00938         movwf   framelen
                      00939         ;; dst adress
028B   0832           00940         movf    rsp_adress1,W
028C   00BF           00941         movwf   txframe
                      00942         ;; dst adress
028D   0833           00943         movf    rsp_adress2,W
028E   00C0           00944         movwf   txframe+1
                      00945         ;; * my own src adress
028F   0834           00946         movf    adress1, W
0290   00C1           00947         movwf   txframe+2
                      00948         ;; * my own src adress
0291   0835           00949         movf    adress2, W
0292   00C2           00950         movwf   txframe+3
                      00951         ;; 0x03 control bit
0293   3003           00952         movlw   0x03
0294   00C3           00953         movwf   txframe+4
                      00954         ;; 0x01 protocoll
0295   3001           00955         movlw   0x01
0296   00C4           00956         movwf   txframe+5
                      00957         ;; Data
0297   3001           00958         movlw   0x01
0298   00C5           00959         movwf   txframe+6
                      00960         ;; Data - DeviceID
0299   3023           00961         movlw   DEV_ID1
029A   00C6           00962         movwf   txframe+7
                      00963         ;; Data - DeviceID
029B   3062           00964         movlw   DEV_ID2
029C   00C7           00965         movwf   txframe+8
                      00966         ;; Padding bit
029D   3000           00967         movlw   0x00
029E   00C8           00968         movwf   txframe+9
                      00969         
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00970         ;; This is a broadcast package with adress on it
                      00971 ;
029F   3001           00972         movlw   0x01
02A0   0259           00973         subwf   rcframe+5,W
02A1   1903           00974         btfsc   STATUS,Z
02A2   2???           00975         goto    handle_response
02A3   2???           00976         call    txdo
                      00977 ;
02A4   2???           00978         goto    restore
                      00979 
02A5                  00980 func_send_iam_here: ; IMPORTANT, this function "return", use "call func_send_iam_here"
02A5   300C           00981         movlw   12
02A6   1283 1303      00982     banksel framelen
02A8   00BC           00983         movwf   framelen
                      00984 
02A9   30FF           00985         movlw   0xFF
02AA   00BF           00986         movwf   txframe
                      00987 
02AB   30FF           00988         movlw   0xFF
02AC   00C0           00989         movwf   txframe+1
                      00990         ;; * my own src adress
02AD   0834           00991         movf    adress1, W
02AE   00C1           00992         movwf   txframe+2
                      00993         ;; * my own src adress
02AF   0835           00994         movf    adress2, W
02B0   00C2           00995         movwf   txframe+3
                      00996         ;; 0x03 control bit
02B1   3003           00997         movlw   0x03
02B2   00C3           00998         movwf   txframe+4
                      00999         ;; 0x01 protocoll
02B3   3000           01000         movlw   0x00
02B4   00C4           01001         movwf   txframe+5
                      01002         ;; Data
02B5   3003           01003         movlw   0x03
02B6   00C5           01004         movwf   txframe+6
                      01005         ;; 0x00 Basic config response
02B7   3001           01006         movlw   0x01
02B8   00C6           01007         movwf   txframe+7
                      01008         ;; Data - DeviceID
02B9   3023           01009         movlw   DEV_ID1
02BA   00C7           01010         movwf   txframe+8
                      01011         ;; Data - DeviceID
02BB   3062           01012         movlw   DEV_ID2
02BC   00C8           01013         movwf   txframe+9
                      01014         ;; Padding bit
02BD   3000           01015         movlw   0x00
02BE   00C9           01016         movwf   txframe+10
                      01017 
02BF   2???           01018         call    txdo
02C0   0008           01019         return  
                      01020 
02C1                  01021 func_rand_addr:
02C1   1283 1303      01022         banksel rand
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C3   082A           01023         movf    rand,W
02C4   00B4           01024         movwf   adress1
02C5   2???           01025         call    lfsr_func
02C6   1283 1303      01026         banksel rand
02C8   082A           01027         movf    rand,W
02C9   00B5           01028         movwf   adress2
02CA   0008           01029         return
                      01030 
02CB                  01031 func_setport:
02CB   3002           01032         movlw   2
02CC   1283 1303      01033         banksel FSR
02CE   0784           01034         addwf   FSR,F
02CF   1283 1303      01035         banksel INDF
02D1   0800           01036         movf    INDF,W
                      01037     #ifdef PORTC
02D2   1283 1303      01038         banksel PORTC
02D4   0087           01039         movwf   PORTC
                      01040     #endif
02D5   2???           01041         goto    restore
                      01042 
02D6                  01043 func_set_rsp_addr:
                      01044         ;; Add last rec package src addr to rsp_adress1 rsp_adress2
02D6   3056           01045         movlw   rcframe+2         ;       dst addr
02D7   1283 1303      01046         banksel FSR
02D9   0084           01047         movwf   FSR
02DA   1283 1303      01048         banksel INDF
02DC   0800           01049         movf    INDF,W
02DD   1283 1303      01050         banksel rsp_adress1
02DF   00B2           01051         movwf   rsp_adress1
02E0   3057           01052         movlw   rcframe+3         ;       dst addr
02E1   1283 1303      01053         banksel FSR
02E3   0084           01054         movwf   FSR
02E4   1283 1303      01055         banksel INDF
02E6   0800           01056         movf    INDF,W
02E7   1283 1303      01057         banksel rsp_adress2
02E9   00B3           01058         movwf   rsp_adress2
02EA   0008           01059         return
                      01060 
02EB                  01061 handle_response:
02EB   1283 1303      01062         banksel rc_listen
02ED   11AD           01063         bcf     rc_listen,3
02EE   14B7           01064         bsf     speedlib_main,1
02EF   10AD           01065         bcf     rc_listen,1
                      01066 
                      01067 
                      01068     ; Important, this should be run in "main space", not interupt space, soo,
                      01069     ; well, now it is runed somewheare in the middle, wait for response STATE
02F0   1283 1303      01070         banksel INTCON
02F2   178B           01071         bsf     INTCON,GIE
02F3   300A           01072         movlw   10
02F4   1283 1303      01073         banksel loop1
02F6   00AB           01074         movwf   loop1
02F7                  01075 handle_response_loop:
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02F7   2???           01076         call    txdo
02F8   30FA           01077         movlw   250
02F9   2???           01078         call    Delay
                      01079 
                      01080         ;; If error
02FA   1283 1303      01081         banksel RCSTA
02FC   1898           01082         btfsc   RCSTA,OERR
02FD   2???           01083         call    recerror
                      01084         ;;
02FE   1283 1303      01085         banksel rc_listen
0300   19AD           01086         btfsc   rc_listen,3
0301   2???           01087         goto    handle_response_ret
0302   0BAB           01088         decfsz  loop1,f
0303   2???           01089         goto    handle_response_loop
                      01090 
0304                  01091 handle_response_ret:
0304   11AD           01092         bcf     rc_listen,3
0305   10B7           01093         bcf     speedlib_main,1
0306   2???           01094         goto    restore
                      01095 
0307                  01096 reccrcfail:
                      01097         ;; Because that this happend directrly after a crc-fail, here we need to clear the counter, so t
                            he newxt comming package will start allover
0307   1283 1303      01098     banksel rc_counter
0309   3005           01099     movlw   5
030A   022E           01100     subwf   rc_counter,W
030B   1C03           01101     btfss   STATUS,C
030C   2???           01102     goto    reccrcfail_end
                      01103         ;; Do somthing
                      01104 ;       movlw    B'00000100'    ;toggle bit3
                      01105 ;    banksel  PORTA
                      01106 ;       xorwf    PORTA,F
030D   30FA           01107     movlw    250
030E   2???           01108     call    Delay
030F                  01109 reccrcfail_end:
030F   1283 1303      01110     banksel rc_counter
0311   01AE           01111     clrf        rc_counter
0312   2???           01112         goto    restore
                      01113         
0313                  01114 recerror:
                      01115         ;; Do somthing
0313   1283 1303      01116     banksel RCSTA
0315   1218           01117         bcf     RCSTA,CREN
0316   1618           01118         bsf     RCSTA,CREN
0317   0008           01119         return
0318                  01120 txoops:                         ; Colisson has ocurred
0318   1283 1303      01121         banksel txreturn
031A   10BE           01122         bcf     txreturn,1
031B   2???           01123         call    lfsr_func
031C   1283 1303      01124         banksel rand
031E   082A           01125         movf    rand,W
031F   2???           01126         call    Delay
0320   2???           01127         goto    txdo2
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01128 
0321                  01129 tx_send:
0321   1283 1303      01130         banksel txtmp
0323   00BD           01131         movwf   txtmp
0324   307E           01132         movlw   0x7e            
0325   023D           01133         subwf   txtmp,W         
0326   1903           01134         btfsc   STATUS,Z
0327   2???           01135         goto    tx_send_escape_1
                      01136 
0328   307D           01137         movlw   0x7d
0329   023D           01138         subwf   txtmp,W
032A   1903           01139         btfsc   STATUS,Z
032B   2???           01140         goto    tx_send_escape_2
032C   083D           01141         movf    txtmp,W
                      01142         
032D                  01143 tx_send_noescape:
032D   1283 1303      01144         banksel txtmp
032F   00BD           01145         movwf   txtmp
0330   1683 1303      01146         banksel TXSTA
0332                  01147 tx_send_noescape_l:
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0332   1C98           01148         btfss   TXSTA,TRMT
0333   2???           01149         goto    tx_send_noescape_l
                      01150 #ifdef  ARC_16F
0334   1283 1303      01151         banksel d1
0336   3002           01152         movlw   0x02
0337   00A0           01153         movwf   d1
0338                  01154 tx_send_noescape_d1:
0338   30FF           01155         movlw   0xFF
0339   0B80           01156         decfsz  W,f
033A   2???           01157         goto    tx_send_noescape_d1
033B   0BA0           01158         decfsz  d1,f
033C   2???           01159         goto    tx_send_noescape_d1
                      01160 #endif
033D   1283 1303      01161         banksel txtmp
033F   083D           01162         movf    txtmp,W
0340   14AD           01163         bsf         rc_listen, 1
0341   00B0           01164         movwf   rc_nocoll
0342   1283 1303      01165         banksel TXREG
0344   0099           01166         movwf   TXREG
                      01167 #ifdef  ARC_16F
0345   1283 1303      01168         banksel d1
0347   3002           01169         movlw   0x02
0348   00A0           01170         movwf   d1
0349                  01171 tx_send_noescape_d2:
0349   30FF           01172         movlw   0xFF
034A   0B80           01173         decfsz  W,f
034B   2???           01174         goto    tx_send_noescape_d2
034C   0BA0           01175         decfsz  d1,f
034D   2???           01176         goto    tx_send_noescape_d2
                      01177 #endif
034E   0008           01178         return
                      01179 
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

034F                  01180 tx_send_escape_1:
034F   307D           01181         movlw   0x7d
0350   2???           01182         call    tx_send_noescape
0351   305E           01183         movlw   0x5e
0352   2???           01184         call    tx_send_noescape
0353   0008           01185         return
                      01186 
0354                  01187 tx_send_escape_2:
0354   307D           01188         movlw   0x7d
0355   2???           01189         call    tx_send_noescape
0356   305D           01190         movlw   0x5d
0357   2???           01191         call    tx_send_noescape
0358   0008           01192         return
                      01193         
                      01194 
0359                  01195 txdo:                           ; This is like the funktion argumnents, they need to be set at every pre
                            sense of crcloopr
                      01196 
0359   1283 1303      01197         banksel framelen
035B   083C           01198         movf    framelen,W
035C   00BA           01199         movwf   crcloop
035D   303F           01200         movlw   txframe
035E   1283 1303      01201         banksel FSR
0360   0084           01202         movwf   FSR
0361   1283 1303      01203         banksel crc0
0363   01B8           01204         clrf    crc0
0364   01B9           01205         clrf    crc1
0365   2???           01206         call    crcloopr
0366   2???           01207         goto    txdo2
0367                  01208 crcloopr:
0367   1283 1303      01209         banksel crcloop
0369   0BBA           01210         decfsz  crcloop, f
036A   2???           01211         goto    crccalc
036B   0008           01212         return
                      01213 
036C                  01214 crccalc:
036C   1283 1303      01215         banksel INDF
036E   0800           01216         movf  INDF,W            ;;load w with next databyte
036F   1283 1303      01217         banksel crc1
0371   0639           01218         xorwf crc1,W            ;;(a^x):(b^y)
0372   00BB           01219         movwf crctmp            ;;
0373   39F0           01220         andlw 0xf0              ;; W = (a^x):0
0374   0EBB           01221         swapf crctmp,F          ;; Index = (b^y):(a^x)
0375   06BB           01222         xorwf crctmp,F          ;; Index = (a^b^x^y):(a^x) = i2:i1
                      01223 
                      01224                                 ;; High byte
0376   083B           01225         movf  crctmp,W
0377   39F0           01226         andlw 0xf0
0378   0638           01227         xorwf crc0,W
0379   00B9           01228         movwf crc1
                      01229 #ifdef  ARC_18F
                      01230         rlcf crctmp,W
                      01231         rlcf crctmp,W
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01232 #endif
                      01233 #ifdef  ARC_16F
037A   0D3B           01234         rlf  crctmp,W           ;; use rlf for PIC16
037B   0D3B           01235         rlf  crctmp,W           ;; use rlf for PIC16
                      01236 #endif
                      01237 #ifdef  ARC_12F
                      01238         rlf  crctmp,W           ;; use rlf for PIC16
                      01239         rlf  crctmp,W           ;; use rlf for PIC16
                      01240 #endif
037C   06B9           01241         xorwf crc1,F
037D   39E0           01242         andlw 0xe0
037E   06B9           01243         xorwf crc1,F
                      01244 
037F   0EBB           01245         swapf crctmp,F
0380   063B           01246         xorwf crctmp,W
0381   00B8           01247         movwf crc0
0382   1283 1303      01248         banksel FSR
0384   0A04           01249         incf    FSR,W
0385   0084           01250         movwf   FSR
0386   2???           01251         goto crcloopr
                      01252 
0387                  01253 txdo2:
                      01254     ;; Set TX enable
0387   1283 1303      01255     banksel OUTREG
0389   1606           01256         bsf     OUTREG,OUTNUM
                      01257         ;;
038A   307E           01258         movlw   0x7e
038B   2???           01259         call    tx_send_noescape
038C   1283 1303      01260         banksel txframe
038E   303F           01261     movlw       txframe
038F   1283 1303      01262     banksel FSR
0391   0084           01263         movwf   FSR
0392   1283 1303      01264     banksel framelen
0394   083C           01265         movf    framelen,W
0395   00BA           01266         movwf   crcloop
0396                  01267 send:
0396   1283 1303      01268     banksel crcloop
0398   0BBA           01269         decfsz  crcloop,f
0399   2???           01270         goto    lopp
039A   2???           01271         goto    crcsend
039B                  01272 lopp:
039B   1283 1303      01273     banksel INDF
039D   0800           01274         movf    INDF,W
039E   2???           01275         call    tx_send
039F   1283 1303      01276     banksel FSR
03A1   0A84           01277         incf    FSR,F
03A2   2???           01278         goto    send
                      01279 
03A3                  01280 crcsend:
03A3   1283 1303      01281         banksel crc0
03A5   0838           01282         movf    crc0,W
03A6   2???           01283         call    tx_send
03A7   1283 1303      01284         banksel crc1
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03A9   0839           01285         movf    crc1,W
03AA   2???           01286         call    tx_send
03AB   2???           01287         goto    endflag
                      01288 
03AC                  01289 endflag:
03AC   307E           01290         movlw   0x7e
03AD   2???           01291         call    tx_send_noescape
03AE   1683 1303      01292     banksel TXSTA
03B0                  01293 endflag_l:
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
03B0   1C98           01294         btfss   TXSTA,TRMT
03B1   2???           01295         goto    endflag_l
03B2   18BE           01296     btfsc       txreturn,1
03B3   2???           01297         goto    txoops
                      01298     ;; Disable TX enable
03B4   1283 1303      01299     banksel OUTREG
03B6   1206           01300         bcf     OUTREG,OUTNUM
                      01301 
03B7   0008           01302         return
                      01303 
03B8                  01304 trd:    
03B8   2???           01305         call    lfsr_func               ; Three random delays before sending broadcast
03B9   1283 1303      01306         banksel rand
03BB   082A           01307         movf    rand,W
03BC   2???           01308         call    Delay
03BD   2???           01309         call    lfsr_func
03BE   1283 1303      01310         banksel rand
03C0   082A           01311         movf    rand,W
03C1   2???           01312         call    Delay
03C2   2???           01313         call    lfsr_func
03C3   1283 1303      01314         banksel rand
03C5   082A           01315         movf    rand,W
03C6   2???           01316         call    Delay
03C7   0008           01317         return
                      01318         
03C8                  01319 lfsr_func:
03C8   1283 1303      01320         banksel rand
                      01321 #ifdef  ARC_18F
                      01322         rlcf     rand,W
                      01323         rlcf     rand,W
                      01324 #endif
                      01325 #ifdef  ARC_16F
03CA   0D2A           01326         rlf     rand,W
03CB   0D2A           01327         rlf     rand,W
                      01328 #endif
                      01329 #ifdef  ARC_12F
                      01330         rlf     rand,W
                      01331         rlf     rand,W
                      01332 #endif
03CC   1A2A           01333         btfsc   rand,4
03CD   3A01           01334         xorlw   1
03CE   1AAA           01335         btfsc   rand,5
03CF   3A01           01336         xorlw   1
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03D0   19AA           01337         btfsc   rand,3
03D1   3A01           01338         xorlw   1
03D2   00AA           01339         movwf   rand
03D3   3400           01340         retlw   0
                      01341         
03D4                  01342 Delay:
03D4   1283 1303      01343         banksel d1
                      01344         ;; 499994 cycles
03D6   00A2           01345         movwf   d3
03D7   30FF           01346         movlw   0xFF
03D8   00A1           01347         movwf   d2
03D9   3032           01348         movlw   50
03DA   00A0           01349         movwf   d1
03DB                  01350 Delay_0:
03DB   0BA0           01351         decfsz  d1, f
03DC   2???           01352         goto    Delay_0
03DD   3014           01353         movlw   20              ; Need this for tuning
03DE   00A0           01354         movwf   d1
03DF   0BA1           01355         decfsz  d2, f
03E0   2???           01356         goto    Delay_0
03E1   3064           01357         movlw   100
03E2   00A1           01358         movwf   d2
03E3   0BA2           01359         decfsz  d3, f
03E4   2???           01360         goto    Delay_0
03E5   0008           01361         return
                      01362 
                      01363 ;read_eeprom:
                      01364 ;        banksel EEADR
                      01365 ;        ;; Take the preset W number, and take the byte from the addr
                      01366 ;        movwf   EEADR
                      01367 ;        banksel EECON1
                      01368 ;        bcf     EECON1, EEPGD
                      01369 ;        bsf     EECON1, RD
                      01370 ;
                      01371 ;        btfsc   EECON1, RD
                      01372 ;        goto    $-1
                      01373 ;
                      01374 ;        ;; Put the result in W
                      01375 ;        banksel EEDAT
                      01376 ;        movf    EEDAT, W
                      01377 ;        return
                      01378 ;
                      01379 ;write_eeprom:
                      01380 ;        banksel EEDAT
                      01381 ;        movwf   EEDAT ; write the value already in W to EEDAT, the data
                      01382 ;        banksel rc_nocoll
                      01383 ;        movf    rc_nocoll,W
                      01384 ;        banksel EEADR
                      01385 ;        movwf   EEADR
                      01386 ;        banksel EECON1
                      01387 ;        bcf     EECON1, EEPGD
                      01388 ;        bsf     EECON1, WREN
                      01389 ;
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01390 ;        banksel EECON2
                      01391 ;        ; bcf   INTCON, GIE ; Well, GIE should be zero when it gets here
                      01392 ;        movlw   0x55
                      01393 ;        movwf   EECON2
                      01394 ;        movlw   0xAA
                      01395 ;        movwf   EECON2
                      01396 ;        banksel EECON1
                      01397 ;        bsf     EECON1, WR
                      01398 ;        ; bsf     INTCON, GIE
                      01399 
                      01400 
                      01401 ;        btfsc   EECON1, WR
                      01402 ;        goto    $-1
                      01403 
                      01404 
                      01405  ;       bcf     EECON1, WREN
                      01406  ;       return
                      00011 
                      00012              errorlevel -302
2007   30D4           00013                         __config (_INTRC_OSC_NOCLKOUT & _WDT_OFF & _PWRTE_OFF & _MCLRE_OFF & _CP_OFF & _
                            BOR_OFF & _IESO_OFF & _FCMEN_OFF)
                      00014 
                      00015         ;;      __config  _FCMEN_OFF& _IESO_OFF& _MCLRE_OFF& _WDT_OFF& _INTOSCIO
                      00016 ;;;
                      00017 ;;;    _FCMEN_OFF           ; -- fail safe clock monitor enable off
                      00018 ;;;    _IESO_OFF            ; -- int/ext switch over enable off
                      00019 ;;;    _BOR_ON              ; default, brown out reset on
                      00020 ;;;    _CPD_OFF             ; default, data eeprom protection off
                      00021 ;;;    _CP_OFF              ; default, program code protection off
                      00022 ;;;    _MCLR_OFF            ; -- use MCLR pin as digital input
                      00023 ;;;    _PWRTE_OFF           ; default, power up timer off
                      00024 ;;;    _WDT_OFF             ; -- watch dog timer off
                      00025 ;;;    _INTOSCIO            ; -- internal osc, RA6 and RA7 I/O
                      00026 ;;;
                      00027 
                      00028 ;;;  --< constants >---------------------------------------------------
                      00029         cblock      USER_VARIABLE_SPACE
  00000068            00030         servo_1_val
  00000069            00031         larm_dec
  0000006A            00032         larm_sig
  0000006B            00033         larm_mem    ; Help the rutine to only send the movment package ONCE
  0000006C            00034         ad_lo
  0000006D            00035         ad_hi
  0000006E            00036         lamp_timer
                      00037         endc
                      00038 ;
                      00039 
                      00040         radix dec ;
                      00041 
  00000008            00042 clock   equ     8       ; 8 MHz
  00004B00            00043 baud    equ     19200  ; 19200, 57600, or 115200
  00000004            00044 brgdiv  equ     4       ; divider value for BRG16 = 1
  00000067            00045 brgval  equ     (clock*10000000/baud/brgdiv+5)/10-1
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00046 
                      00047 
                      00048 
                      00049         org     0x000
0000   2???           00050         goto    v_reset
                      00051         org     0x004
0004   2???           00052         goto    intserv
                      00053 
0005                  00054 v_reset:
0005   1407           00055                   bsf   PORTC,0
0006   0183           00056                   clrf    STATUS ; force bank 0 and IRP = 0        |B0
0007   2???           00057                   goto    Init   ;                                 |B0
                      00058 
                      00059         ;; ******************************************************************
                      00060         ;;   main init                                                      *
                      00061         ;; ******************************************************************
                      00062 
0008                  00063 Init:
0008   1703           00064                   bsf     STATUS,RP1 ; bank 2                          |B2
0009   019E           00065                   clrf    ANSEL      ; turn off ADC pins               |B2
000A   019F           00066                   clrf    ANSELH     ; turn off ADC pins               |B2
000B   3007           00067                   movlw   b'00000111' ; '00000000'                      |B2
000C   009E           00068                   movwf   ANSEL      ;                                 |B2
                      00069         ;;
                      00070         ;;   setup 8 MHz INTOSC
                      00071         ;;
000D   1303           00072                   bcf     STATUS,RP1 ; bank 0                          |B0
000E   1683           00073                   bsf     STATUS,RP0 ; bank 1                          |B1
                      00074                   ;; AD CONFIG
000F   3070           00075                   movlw   b'01110000'
0010   009F           00076                   movwf   ADCON1
                      00077 
0011   3070           00078                   movlw   b'01110000' ; '01110000'                      |B1
0012   008F           00079                   movwf   OSCCON      ;                                 |B1
0013                  00080 Stable:
0013   1D0F           00081                   btfss   OSCCON,HTS ; osc stable? yes, skip, else     |B1
0014   2???           00082                   goto    Stable     ; test again                      |B1
                      00083         ;;
                      00084         ;;   setup ports
                      00085         ;;
0015   30FF           00086                   movlw b'11111111'
0016   0085           00087                   movwf TRISA   ; Make PortA all input
0017   0186           00088                   clrf    TRISB ; setup PORT B all outputs        |B1
0018   0187           00089                   clrf    TRISC ; setup PORT C all outputs        |B1
                      00090         ;;
                      00091         ;; Set interupts
                      00092         ;;
                      00093 
                      00094 
0019   3021           00095                 movlw   b'00100001'
001A   008C           00096                 movwf   PIE1
                      00097 
                      00098         ;;
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00099         ;;   setup UART module for 19200 baud (8 MHz Clock)
                      00100         ;;
001B   3067           00101                   movlw   low(brgval) ;                                 |B1
001C   0099           00102                   movwf   SPBRG       ;                                 |B1
001D   3000           00103                   movlw   high(brgval) ;                                 |B1
001E   009A           00104                   movwf   SPBRGH       ;                                 |B1
001F   159B           00105                   bsf     BAUDCTL,BRG16 ; select 16 bit BRG               |B1
0020   3024           00106                   movlw   b'00100100'   ; '0-------' CSRC, n/a (async)    |B1
                      00107         ;;  '-0------' TX9 off, 8 bits      |B1
                      00108         ;;  '--1-----' TXEN, tx enabled     |B1
                      00109         ;;  '---0----' SYNC, async mode     |B1
                      00110         ;;  '----0---' SENDB, send brk      |B1
                      00111         ;;  '-----1--' BRGH, high speed     |B1
                      00112         ;;  '------00' TRMT, TX9D           |B1
0021   0098           00113                   movwf   TXSTA ;                                 |B1
0022   1283           00114                   bcf     STATUS,RP0 ; bank 0                          |B0
0023   3090           00115                   movlw   b'10010000' ; '1-------' SPEN, port enabled   |B0
                      00116         ;;  '-0------' RX9 off, 8 bits      |B0
                      00117         ;;  '--0-----' SREN, n/a (async)    |B0
                      00118         ;;  '---1----' CREN, rx enabled     |B0
                      00119         ;;  '----0---' ADDEN off            |B0
                      00120         ;;  '-----000' FERR, OERR, RX9D     |B0
0024   0098           00121                   movwf   RCSTA ;                                 |B0
0025   081A           00122                   movf    RCREG,W ; flush Rx Buffer                 |B0
0026   081A           00123                   movf    RCREG,W ;                                 |B0
                      00124 
                      00125         ;;
                      00126         ;; Set Interrupts
                      00127         ;;
                      00128 
0027   178B           00129                 bsf     INTCON, GIE
0028   170B           00130                 bsf     INTCON, PEIE
                      00131         ;;
                      00132         ;; SET RX/TX parameters
                      00133         ;;
                      00134 
0029   01BE           00135         clrf    txreturn
                      00136 
                      00137         ;;      Do not clear the adress:es, use the one that is set, read the speedbus text, "Adress han
                            deling system!"
                      00138         ;;      clrf    adress1
                      00139         ;;      movlw   0x7e
                      00140         ;;      movwf   adress1
                      00141         ;;      movlw   0x7d
                      00142         ;;      movwf   adress2
                      00143         ;;      clrf    adress1
                      00144         ;;      clrf    adress2
                      00145 
002A   102F           00146         bcf     rc_gotflag,0
                      00147 
                      00148         ;;
                      00149         ;; Put a inalization value in the servo area/:s....
002B   300E           00150         movlw   0x0E
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002C   00E8           00151         movwf   servo_1_val
                      00152 
                      00153         ;; Activate AD decoder
002D   3081           00154         movlw   b'10000001'
002E   009F           00155         movwf   ADCON0
                      00156 
                      00157         ;; Activate Timer1
002F   3030           00158         movlw   b'00110000'
0030   0090           00159         movwf   T1CON
                      00160 
0031   018E           00161         clrf    TMR1L
0032   018F           00162         clrf    TMR1H
                      00163 
0033   0186           00164         clrf    PORTB
                      00165 
0034   30FF           00166         movlw   255
0035   00EB           00167         movwf   larm_mem
0036   2???           00168         call    trd         ; Just to delay to make sure that the detectors realy are startup BEFORE the
                             AD are started to check.
                      00169 
0037   2???           00170         call    init_speedlib
                      00171 
0038                  00172 main:
0038   1898           00173         btfsc   RCSTA,OERR
0039   2???           00174         call    recerror
003A   1007           00175         bcf     PORTC,0
                      00176         ;btfsc  PORTA, 0
                      00177         ;call   txporta
003B   0AAA           00178         incf    rand,F          ; Increase the random value
                      00179 
003C   2???           00180         call    larm_check
003D   2???           00181         goto    main
                      00182 
                      00183 
003E                  00184 c_intserv:
003E   180C           00185         btfsc   PIR1,TMR1IF     ;       Check if the Timer bit is set
003F   2???           00186         goto    c_intserv_timer1
0040   2???           00187         goto    ci_restore
0041                  00188 c_intserv_timer1:
0041   100C           00189         bcf     PIR1,TMR1IF
                      00190 
0042   1010           00191         bcf     T1CON,0
0043   018E           00192         clrf    TMR1L
0044   018F           00193         clrf    TMR1H
0045   1410           00194         bsf     T1CON,0
0046   0BEE           00195         decfsz  lamp_timer, f
0047   2???           00196         goto    ci_restore
0048   1087           00197         bcf     PORTC,1
0049   1010           00198         bcf     T1CON,0
004A   2???           00199         goto    ci_restore
                      00200 
004B                  00201 custom_command_handler:
004B   300A           00202         movlw   0x0A          ; Min  custom
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004C   0200           00203         subwf   INDF,W        ; This is the command data byte, predefinde, before called by this funktio
                            n
004D   00AA           00204         movwf   rand          ; Just use the random register rand(no reason why, just a temporary regist
                            er availble)
004E   1C03           00205         btfss   STATUS,C      ; Check so that the Commmand bit is >= 0x0A ; NOTE: If "addwf PC,F" Gets a
                             zero, it brobubly will act like a "goto $"
004F   2???           00206         goto    restore
                      00207 
0050   3003           00208         movlw   3             ; MaxCommand; This is the number of functions in the list bellow, just to 
                            make sure its safe for buffer overflow
0051   022A           00209         subwf   rand,W        ; Command
0052   1803           00210         btfsc   STATUS,C      ; If Command >= MaxCommand then goto restore
0053   2???           00211         goto    restore
                      00212 
0054   082A           00213         movf    rand,W
0055   0782           00214         addwf   PCL,F
0056   2???           00215         goto    set_PORTC
0057   2???           00216         goto    rx_set_servo
0058   2???           00217         goto    get_AD
0059   2???           00218         goto    restore
                      00219 
                      00220 
005A                  00221 rx_set_servo:
005A   305B           00222         movlw   rcframe+7       ; Move recived byte to W
005B   0084           00223         movwf   FSR
005C   0800           00224         movf    INDF,W
005D   2???           00225         call    set_servo
005E   2???           00226         goto    restore
                      00227 
005F                  00228 set_servo:
005F   00E8           00229         movwf   servo_1_val
                      00230 
0060   3003           00231         movlw   3               ; Maybe increase this later, if servo wont play..
0061   00AB           00232         movwf   loop1
                      00233 
0062                  00234 set_servo_loop:
0062   2???           00235         call Delay__00
0063   1407           00236         bsf     PORTC,0
0064   0868           00237         movf    servo_1_val,W
0065   2???           00238         call Delay__11
0066   1007           00239         bcf     PORTC,0
0067   2???           00240         call Delay__00
0068   1407           00241         bsf     PORTC,0
0069   0868           00242         movf    servo_1_val,W
006A   2???           00243         call Delay__11
006B   1007           00244         bcf     PORTC,0
006C   0BAB           00245         decfsz  loop1,  f
006D   2???           00246         goto    set_servo_loop
006E   0008           00247         return
                      00248 
                      00249 
006F                  00250 set_PORTC:
006F   305B           00251         movlw   rcframe+7       ; Move recived byte to W
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0070   0084           00252         movwf   FSR
0071   1800           00253         btfsc   INDF,0
0072   1487           00254         bsf     PORTC,1
0073   1C00           00255         btfss   INDF,0
0074   1087           00256         bcf     PORTC,1
0075   2???           00257         goto    restore
                      00258 
0076                  00259 get_AD:
0076   2???           00260         call    trd
                      00261 
0077   3089           00262         movlw   b'10001001'
0078   009F           00263         movwf   ADCON0
0079   2???           00264         call    Delay__00
007A   149F           00265         bsf     ADCON0,GO
007B   189F           00266         btfsc   ADCON0,GO
007C   2???           00267         goto    $-1
                      00268 
007D   300B           00269         movlw   11
007E   00BC           00270         movwf   framelen
                      00271         ;; 0xff broadcast dst adress
007F   30FF           00272         movlw   0xff
0080   00BF           00273         movwf   txframe
                      00274         ;; 0xff broadcast dst adress
0081   30FF           00275         movlw   0xff
0082   00C0           00276         movwf   txframe+1
                      00277         ;; * my own src adress
0083   0834           00278         movf    adress1, W
0084   00C1           00279         movwf   txframe+2
                      00280         ;; * my own src adress
0085   0835           00281         movf    adress2, W
0086   00C2           00282         movwf   txframe+3
                      00283         ;; 0x03 control bit
0087   3003           00284         movlw   0x03
0088   00C3           00285         movwf   txframe+4
                      00286         ;; 0x01 protocoll
0089   3001           00287         movlw   0x01
008A   00C4           00288         movwf   txframe+5
                      00289         ;; First Data byte
008B   3002           00290         movlw   0x02
008C   00C5           00291         movwf   txframe+6
                      00292         ;; Second Data byte
008D   1683           00293         bsf     STATUS,RP0
008E   081E           00294         movf    ADRESL,W
008F   1283           00295         bcf     STATUS,RP0
0090   00C6           00296         movwf   txframe+7
                      00297         ;; Third Data Byte
0091   081E           00298         movf    ADRESH,W
0092   00C7           00299         movwf   txframe+8
                      00300         ;; Padding bit
0093   3000           00301         movlw   0x00
0094   00C8           00302         movwf   txframe+9
                      00303 
                      00304         ;; This is a broadcast package with adress on it
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0095   143E           00305         bsf     txreturn,0
0096   2???           00306         call    txdo
0097   2???           00307         goto    restore
                      00308 
                      00309 
0098                  00310 larm_check:
                      00311         ; Check sabotage 3  ; The builtin antitamp, on the device
0098   3002           00312         movlw   2
0099   00E9           00313         movwf   larm_dec
009A   1D85           00314         btfss   PORTA,3
009B   2???           00315         goto    larm_alert_tamp
                      00316 
                      00317         ; Check detector 1
009C   3000           00318         movlw   0
009D   00E9           00319         movwf   larm_dec
009E   3003           00320         movlw   3
009F   00AB           00321         movwf   loop1   ; Speedlib variable, free to use :D
                      00322 
00A0                  00323 larm_check_d1:
00A0   1037           00324         bcf     speedlib_main,0     ; Clear this bit, before the rutine
00A1   3081           00325         movlw   b'10000001'
00A2   009F           00326         movwf   ADCON0
00A3   2???           00327         call    Delay__00
00A4   149F           00328         bsf     ADCON0,GO
00A5   189F           00329         btfsc   ADCON0,GO
00A6   2???           00330         goto    $-1
                      00331 
00A7   1683           00332         bsf     STATUS,RP0
00A8   081E           00333         movf    ADRESL,W
00A9   1283           00334         bcf     STATUS,RP0
00AA   00EC           00335         movwf   ad_lo
00AB   081E           00336         movf    ADRESH,W
00AC   00ED           00337         movwf   ad_hi
00AD   1837           00338         btfsc   speedlib_main,0      ; If this bit is ONE, an interupt has ocurred, and the value in AD 
                            may be false, rerun the calc
00AE   2???           00339         goto    larm_check_d1
                      00340 
00AF   1CED           00341         btfss   ad_hi,1
00B0   2???           00342         goto    larm_alert_tamp
                      00343 
00B1   086D           00344         movf    ad_hi,W
00B2   3C02           00345         sublw   2
00B3   1D03           00346         btfss   STATUS,Z
00B4   2???           00347         goto    larm_check_d1_end
00B5   30DF           00348         movlw   0xdf
00B6   026C           00349         subwf   ad_lo,W
00B7   1C03           00350         btfss   STATUS,C
00B8   2???           00351         goto    larm_check_d1_loopcheck ; Dont go with the first check on the AD, get three values and m
                            ake sure everyone are right before alert
00B9   2???           00352         goto    larm_check_d1_end
                      00353 
00BA                  00354 larm_check_d1_loopcheck:
00BA   0BAB           00355         decfsz  loop1,F
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00BB   2???           00356         goto    larm_check_d1
00BC   2???           00357         goto    larm_alert_movment
                      00358 
00BD                  00359 larm_check_d1_end:
                      00360         ; Check detector 2
00BD   3001           00361         movlw   1
00BE   00E9           00362         movwf   larm_dec
00BF   3003           00363         movlw   3
00C0   00AB           00364         movwf   loop1   ; Speedlib variable, free to use :D
                      00365 
00C1                  00366 larm_check_d2:
00C1   1037           00367         bcf     speedlib_main,0     ; Clear this bit, before the rutine
00C2   3085           00368         movlw   b'10000101'
00C3   009F           00369         movwf   ADCON0
00C4   2???           00370         call    Delay__00
00C5   149F           00371         bsf     ADCON0,GO
00C6   189F           00372         btfsc   ADCON0,GO
00C7   2???           00373         goto    $-1
                      00374 
00C8   1683           00375         bsf     STATUS,RP0
00C9   081E           00376         movf    ADRESL,W
00CA   1283           00377         bcf     STATUS,RP0
00CB   00EC           00378         movwf   ad_lo
00CC   081E           00379         movf    ADRESH,W
00CD   00ED           00380         movwf   ad_hi
00CE   1837           00381         btfsc   speedlib_main,0      ; If this bit is ONE, an interupt has ocurred, and the value in AD 
                            may be false, rerun the calc
00CF   2???           00382         goto    larm_check_d2
                      00383 
                      00384 
00D0   1C9E           00385         btfss   ADRESH,1
00D1   2???           00386         goto    larm_alert_tamp
                      00387 
00D2   081E           00388         movf    ADRESH,W
00D3   3C02           00389         sublw   2
00D4   1D03           00390         btfss   STATUS,Z
00D5   2???           00391         goto    larm_check_d2_end
00D6   30DF           00392         movlw   0xdf
00D7   026C           00393         subwf   ad_lo,W
00D8   1C03           00394         btfss   STATUS,C
00D9   2???           00395         goto    larm_check_d2_loopcheck ; Dont go with the first check on the AD, get three values and m
                            ake sure everyone are right before alert
00DA   2???           00396         goto    larm_check_d2_end
                      00397 
00DB                  00398 larm_check_d2_loopcheck:
00DB   0BAB           00399         decfsz  loop1,F
00DC   2???           00400         goto    larm_check_d2
00DD   2???           00401         goto    larm_alert_movment
                      00402 
00DE                  00403 larm_check_d2_end:
00DE   01EB           00404         clrf    larm_mem                ; This is not only usefull for the generall, only send one packa
                            ge, it also usefull for the init rutine, the startup delay at some detectors.
00DF   0008           00405         return
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00406 
                      00407 
                      00408 
00E0                  00409 larm_alert_movment:
00E0   3001           00410         movlw   1
00E1   00EA           00411         movwf   larm_sig
00E2   2???           00412         call    lamp_power_up
00E3   0869           00413         movf    larm_dec,W
00E4   0782           00414         addwf   PCL,F
00E5   2???           00415         goto    larm_alert_movment_dec1
00E6   2???           00416         goto    larm_alert_movment_dec2
                      00417 
00E7                  00418 larm_alert_movment_dec1:
00E7   186B           00419         btfsc   larm_mem,0
00E8   0008           00420         return
00E9   146B           00421         bsf     larm_mem,0
00EA   2???           00422         call    lamp_movment
00EB   2???           00423         goto    larm_send
00EC                  00424 larm_alert_movment_dec2:
00EC   18EB           00425         btfsc   larm_mem,1
00ED   0008           00426         return
00EE   14EB           00427         bsf     larm_mem,1
00EF   2???           00428         call    lamp_movment
00F0   2???           00429         goto    larm_send
                      00430 
                      00431 
00F1                  00432 larm_alert_tamp:
00F1   3000           00433         movlw   0
00F2   00EA           00434         movwf   larm_sig
00F3   2???           00435         call    lamp_power_up_d
00F4   2???           00436         goto    larm_send
                      00437 
00F5                  00438 larm_send:
00F5   300B           00439         movlw   11
00F6   00BC           00440         movwf   framelen
                      00441         ;; 0xff broadcast dst adress
00F7   30FF           00442         movlw   0xff
00F8   00BF           00443         movwf   txframe
                      00444         ;; 0xff broadcast dst adress
00F9   30FF           00445         movlw   0xff
00FA   00C0           00446         movwf   txframe+1
                      00447         ;; * my own src adress
00FB   0834           00448         movf    adress1, W
00FC   00C1           00449         movwf   txframe+2
                      00450         ;; * my own src adress
00FD   0835           00451         movf    adress2, W
00FE   00C2           00452         movwf   txframe+3
                      00453         ;; 0x03 control bit
00FF   3003           00454         movlw   0x03
0100   00C3           00455         movwf   txframe+4
                      00456         ;; 0x01 protocoll
0101   3001           00457         movlw   0x01
0102   00C4           00458         movwf   txframe+5
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00459         ;; First Data byte
0103   30AA           00460         movlw   0xAA    ; This means alarm
0104   00C5           00461         movwf   txframe+6
                      00462         ;; Second Data byte
0105   086A           00463         movf    larm_sig,W       ; This means sabotage
0106   00C6           00464         movwf   txframe+7
                      00465         ;; Third Data Byte
0107   0869           00466         movf    larm_dec,W       ; This indicate twitch detector that
0108   00C7           00467         movwf   txframe+8
                      00468         ;; Padding bit
0109   3000           00469         movlw   0x00
010A   00C8           00470         movwf   txframe+9
                      00471 
                      00472         ;; This is a broadcast package with adress on it
010B   143E           00473         bsf     txreturn,0
010C   2???           00474         call    txdo
                      00475 
010D   2???           00476         call    Delay__00
010E   0008           00477         return
                      00478 
010F                  00479 lamp_movment:
010F   1C69           00480         btfss   larm_dec,0
0110   300E           00481         movlw   14  ;   If it is detector 0, move the camera to position 14
0111   1869           00482         btfsc   larm_dec,0
0112   3007           00483         movlw   7   ;   If it is detector 1, move the camera to position 8
0113   2???           00484         call    set_servo
0114   0008           00485         return
                      00486 
0115                  00487 lamp_power_up:
0115   1037           00488         bcf     speedlib_main,0     ; Clear this bit, before the rutine
0116   3089           00489         movlw   b'10001001'
0117   009F           00490         movwf   ADCON0
0118   2???           00491         call    Delay__00
0119   149F           00492         bsf     ADCON0,GO
011A   189F           00493         btfsc   ADCON0,GO
011B   2???           00494         goto    $-1
                      00495 
011C   1683           00496         bsf     STATUS,RP0
011D   081E           00497         movf    ADRESL,W
011E   1283           00498         bcf     STATUS,RP0
011F   00EC           00499         movwf   ad_lo
0120   081E           00500         movf    ADRESH,W
0121   00ED           00501         movwf   ad_hi
0122   1837           00502         btfsc   speedlib_main,0      ; If this bit is ONE, an interupt has ocurred, and the value in AD 
                            may be false, rerun the calc
0123   2???           00503         goto    lamp_power_up
                      00504 
0124   186D           00505         btfsc   ad_hi,0
0125   0008           00506         return
0126   18ED           00507         btfsc   ad_hi,1
0127   0008           00508         return
0128                  00509 lamp_power_up_d:
0128   018E           00510         clrf    TMR1L
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0129   018F           00511         clrf    TMR1H
012A   1410           00512         bsf     T1CON,0
012B   3078           00513         movlw   120
012C   00EE           00514         movwf   lamp_timer
012D   1487           00515         bsf     PORTC,1
012E   0008           00516         return
                      00517 
                      00518 ; Delay = 0.02 seconds
                      00519 ; Clock frequency = 8 MHz
                      00520 
                      00521 ; Actual delay = 0.02 seconds = 40000 cycles
                      00522 ; Error = 0 %
                      00523 ;; The delay variables is predefined in the libaray
012F                  00524 Delay__00:
                      00525 
                      00526                         ;39998 cycles
012F   303F           00527         movlw   0x3F
0130   00A0           00528         movwf   d1
0131   3020           00529         movlw   0x20
0132   00A1           00530         movwf   d2
0133                  00531 Delay__0:
0133   0BA0           00532         decfsz  d1, f
0134   2???           00533         goto    $+2
0135   0BA1           00534         decfsz  d2, f
0136   2???           00535         goto    Delay__0
                      00536 
                      00537                         ;2 cycles
0137   2???           00538         goto    $+1
0138   0008           00539         return
                      00540 
                      00541 ; Delay = 0.0001 seconds
                      00542 ; Clock frequency = 8 MHz
                      00543 
                      00544 ; Actual delay = 0.0001 seconds = 200 cycles
                      00545 ; Error = 0 %
                      00546 ;; The delay variables is predefined in the libaray
0139                  00547 Delay__11:
                      00548                         ;199 cycles
0139   00A1           00549         movwf  d2
013A                  00550 Delay_1_1:
013A   3042           00551         movlw   0x42
013B   00A0           00552         movwf   d1
013C                  00553 Delay__1:
013C   0BA0           00554         decfsz  d1, f
013D   2???           00555         goto    Delay__1
013E   0BA1           00556         decfsz  d2, f
013F   2???           00557         goto    Delay_1_1
                      00558                         ;1 cycle
0140   0000           00559         nop
0141   0008           00560         return
                      00561 
30D4                  00562         end
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             0000011E
ANSELH                            0000011F
ARC_16F                           1
BAUDCTL                           0000009B
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1SEN                             00000005
C1VREN                            00000007
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2SYNC                            00000000
C2VREN                            00000006
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCPR1H                            00000016
CCPR1L                            00000015
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CM1CON0                           00000119
CM2CON0                           0000011A
CM2CON1                           0000011B
CREN                              00000004
CSRC                              00000007
CUSTOM_INTERRUPT                  c_intserv
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DEV_ID1                           35
DEV_ID2                           98
D_A                               00000005
Delay                             000003D4
Delay_0                           000003DB
Delay_1_1                         0000013A
Delay__0                          00000133
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

Delay__00                         0000012F
Delay__1                          0000013C
Delay__11                         00000139
ECCPAS                            0000001D
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
HTS                               00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOC                               00000096
IOC0                              00000000
IOC1                              00000001
IOC2                              00000002
IOC3                              00000003
IOC4                              00000004
IOC5                              00000005
IOCA                              00000096
IOCA0                             00000000
IOCA1                             00000001
IOCA2                             00000002
IOCA3                             00000003
IOCA4                             00000004
IOCA5                             00000005
IOCB                              00000116
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
Init                              00000008
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MSK                               00000093
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RABPU                         00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
OUTNUM                            4
OUTREG                            PORTB
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PR2                               00000092
PRSEN                             00000007
PS0                               00000000
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000019D
PULSR                             00000002
PULSS                             00000003
PWM1CON                           0000001C
R                                 00000002
RABIE                             00000003
RABIF                             00000000
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
READ_WRITE                        00000002
REC_CUSTOM_JUMP                   custom_command_handler
RP0                               00000005
RP1                               00000006
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SENB                              00000003
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEEDLIB_RESPONSE_DELAY           9
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             0000019E
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

SSPSTAT                           00000094
STATUS                            00000003
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SWDTEN                            00000000
SYNC                              00000004
Stable                            00000013
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GSS                             00000001
T1IE                              00000000
T1IF                              00000000
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
T2IE                              00000001
T2IF                              00000001
TMR0                              00000001
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB4                            00000004
TRISB5                            00000005
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
USER_VARIABLE_SPACE               0x68
VCFG                              00000006
VP6EN                             00000004
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000118
VRR                               00000005
W                                 00000000
WCOL                              00000007
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPU                               00000095
WPUA                              00000095
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA4                             00000004
WPUA5                             00000005
WPUB                              00000115
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
_.org_1_007C                      0000007C
_.org_1_00A6                      000000A6
_.org_1_00C7                      000000C7
_.org_1_011B                      0000011B
_.org_1_0134                      00000134
_.org_1_0137                      00000137
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_XT_OSC                           00003FF9
__16F690                          00000001
__DEBUG                           
__MPLAB_DEBUGGER_PICKIT2          1
ad_hi                             0000006D
ad_lo                             0000006C
adress1                           00000034
adress2                           00000035
baud                              00004B00
brgdiv                            00000004
brgval                            00000067
c_intserv                         0000003E
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

c_intserv_timer1                  00000041
ci_restore                        0000009D
clock                             00000008
crc0                              00000038
crc1                              00000039
crccalc                           0000036C
crcloop                           0000003A
crcloopr                          00000367
crcsend                           000003A3
crctmp                            0000003B
custom_command_handler            0000004B
d1                                00000020
d1_tmp                            00000027
d2                                00000021
d2_tmp                            00000028
d3                                00000022
d3_tmp                            00000029
d4                                00000023
endflag                           000003AC
endflag_l                         000003B0
framelen                          0000003C
func_bc                           00000255
func_bc_01                        00000276
func_bc_sendaddr                  00000285
func_check_response               00000220
func_is_ocupied_send_response     00000224
func_is_ocupied_send_response_go  0000022B
func_is_ocupied_send_response_pa  0000022D
func_rand_addr                    000002C1
func_send_iam_here                000002A5
func_send_response                000001F8
func_set_rsp_addr                 000002D6
func_setport                      000002CB
func_speedlib_config              00000184
func_speedlib_config_basics       000001CC
func_speedlib_config_caddr        0000019C
func_speedlib_config_caddr_f      000001B7
func_speedlib_config_extended     0000018D
get_AD                            00000076
handle_response                   000002EB
handle_response_loop              000002F7
handle_response_ret               00000304
init_checkaddr                    00000020
init_checkaddr_l                  00000025
init_checkaddr_not_ocupied        00000044
init_speedlib                     00000000
init_speedlib_e                   0000001F
intserv                           00000084
intserv_norm                      0000008E
lamp_movment                      0000010F
lamp_power_up                     00000115
lamp_power_up_d                   00000128
lamp_timer                        0000006E
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

larm_alert_movment                000000E0
larm_alert_movment_dec1           000000E7
larm_alert_movment_dec2           000000EC
larm_alert_tamp                   000000F1
larm_check                        00000098
larm_check_d1                     000000A0
larm_check_d1_end                 000000BD
larm_check_d1_loopcheck           000000BA
larm_check_d2                     000000C1
larm_check_d2_end                 000000DE
larm_check_d2_loopcheck           000000DB
larm_dec                          00000069
larm_mem                          0000006B
larm_send                         000000F5
larm_sig                          0000006A
lfsr_func                         000003C8
loop1                             0000002B
loop2                             0000002C
lopp                              0000039B
main                              00000038
rand                              0000002A
rc1                               00000055
rc10                              0000005E
rc11                              0000005F
rc12                              00000060
rc13                              00000061
rc14                              00000062
rc15                              00000063
rc16                              00000064
rc17                              00000065
rc18                              00000066
rc19                              00000067
rc2                               00000056
rc20                              00000068
rc3                               00000057
rc4                               00000058
rc5                               00000059
rc6                               0000005A
rc7                               0000005B
rc8                               0000005C
rc9                               0000005D
rc_add_byte                       00000031
rc_counter                        0000002E
rc_gotflag                        0000002F
rc_listen                         0000002D
rc_nocoll                         00000030
rcframe                           00000054
rec                               000000B2
rec_oops_coll                     000000BE
rec_start                         000000C2
reccrcfail                        00000307
reccrcfail_end                    0000030F
recend                            0000010B
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

recend_no_broadcast               00000144
recend_tmp                        0000013F
recerror                          00000313
recr                              000000D4
recsave                           000000D5
recsave_add                       000000F9
recsave_set                       000000E3
recsave_unescape                  000000E7
recsave_unescape_1                000000F5
recsave_unescape_2                000000F7
recx                              000000CD
restore                           000000A1
restore_norm                      000000A5
rsp_adress1                       00000032
rsp_adress2                       00000033
rx_set_servo                      0000005A
send                              00000396
servo_1_val                       00000068
set_PORTC                         0000006F
set_servo                         0000005F
set_servo_loop                    00000062
setaddr                           0000004A
setaddr1                          00000050
setaddr2                          00000059
setaddr_testloop                  00000076
setaddr_testloop_l                0000007A
speedlib_config                   00000036
speedlib_main                     00000037
tmp_PCLATH                        00000026
tmp_STATUS                        00000025
tmp_W                             00000024
trd                               000003B8
tx1                               00000040
tx10                              00000049
tx11                              0000004A
tx12                              0000004B
tx13                              0000004C
tx14                              0000004D
tx15                              0000004E
tx16                              0000004F
tx17                              00000050
tx18                              00000051
tx19                              00000052
tx2                               00000041
tx20                              00000053
tx3                               00000042
tx4                               00000043
tx5                               00000044
tx6                               00000045
tx7                               00000046
tx8                               00000047
tx9                               00000048
tx_send                           00000321
MPASM  5.46  /HOME/OSCAR/SPEEDBUS/PIC/MPLABX.   8-12-2012  2:13:20         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

tx_send_escape_1                  0000034F
tx_send_escape_2                  00000354
tx_send_noescape                  0000032D
tx_send_noescape_d1               00000338
tx_send_noescape_d2               00000349
tx_send_noescape_l                00000332
txdo                              00000359
txdo2                             00000387
txframe                           0000003F
txoops                            00000318
txreturn                          0000003E
txtmp                             0000003D
v_reset                           00000005

Errors   :     0
Warnings :     3 reported,     0 suppressed
Messages :     2 reported,    18 suppressed

