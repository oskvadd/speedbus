gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 List      P=16f690              ; list directive to define processor
               00002 #include <p16f690.inc>
               00001         LIST
               00002 ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
               00607         LIST
               00003              errorlevel -302
002007 30D4    00004                         __config (_INTRC_OSC_NOCLKOUT & _WDT_OFF & _PWRTE_OFF & _MCLRE_OFF & _CP_OFF & _BOR_OFF & _IESO_OFF & _FCMEN_OFF)
               00005 
               00006         ;;      __config  _FCMEN_OFF& _IESO_OFF& _MCLRE_OFF& _WDT_OFF& _INTOSCIO
               00007 ;;;
               00008 ;;;    _FCMEN_OFF           ; -- fail safe clock monitor enable off
               00009 ;;;    _IESO_OFF            ; -- int/ext switch over enable off
               00010 ;;;    _BOR_ON              ; default, brown out reset on
               00011 ;;;    _CPD_OFF             ; default, data eeprom protection off
               00012 ;;;    _CP_OFF              ; default, program code protection off
               00013 ;;;    _MCLR_OFF            ; -- use MCLR pin as digital input
               00014 ;;;    _PWRTE_OFF           ; default, power up timer off
               00015 ;;;    _WDT_OFF             ; -- watch dog timer off
               00016 ;;;    _INTOSCIO            ; -- internal osc, RA6 and RA7 I/O
               00017 ;;;
               00018 
               00019 ;;;  --< constants >---------------------------------------------------
               00020 
               00021         radix dec
               00022 
  00000008     00023 clock   equ     8       ; 8 MHz
  00004B00     00024 baud    equ     19200  ; 19200, 57600, or 115200
  00000004     00025 brgdiv  equ     4       ; divider value for BRG16 = 1
  00000067     00026 brgval  equ     (clock*10000000/baud/brgdiv+5)/10-1
               00027         
               00028 
               00029         cblock  0x20
               00030              d1                 ; Define three file registers for the
               00031              d2                 ; delay loop
               00032              d3
               00033              d4
               00034              tmp_W
               00035              tmp_STATUS
               00036              tmp_PCLATH
               00037              d1_tmp
               00038              d2_tmp
               00039              d3_tmp
               00040              rand
               00041              loop1              ; Loop mem 1
               00042              loop2              ; Loop mem 2
               00043              rc_listen          ; Set diffrent bit:s in this register if you want to do somthing whit diffrent types of pack:ets, look at the code
               00044              rc_counter         ; RC framelen
               00045              rc_gotflag         ; Set to 1 if it "got a flag"
               00046              rc_nocoll          ; Use this to confim that no collission has ocurred
               00047              rc_add_byte        ; recsave_add temporary argument
               00048              adress1            ; The adress at the bus
               00049              adress2            ; The adress at the bus
               00050              sendc
               00051              crc0
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00052              crc1
               00053              crcloop
               00054              crctmp
               00055              framelen           ; TX framelen
               00056              txtmp              ; temporary before sending
               00057              txreturn           ; Hardcoded return, if nessesary(in interupts)
               00058              txframe, tx1, tx2, tx3, tx4, tx5, tx6, tx7, tx8, tx9, tx10 ; Current package limit, 20B
               00059              tx11, tx12, tx13, tx14, tx15, tx16, tx17, tx18, tx19, tx20
               00060              rcframe, rc1, rc2, rc3, rc4, rc5, rc6, rc7, rc8, rc9, rc10 ; Current package limit, 20B
               00061              rc11, rc12, rc13, rc14, rc15, rc16, rc17, rc18, rc19, rc20
               00062 
               00063         endc
               00064 
               00065 
0000           00066         org     0x000
0000 2805      00067         goto v_reset
0004           00068         org     0x004
0004 2893      00069         goto    intserv
               00070 
               00071         
0005 00072 v_reset
0005 0183      00073                   clrf    STATUS ; force bank 0 and IRP = 0        |B0
0006 2807      00074                   goto    Init   ;                                 |B0
               00075 
               00076         ;; ******************************************************************
               00077         ;;   main init                                                      *
               00078         ;; ******************************************************************
               00079 
0007 00080 Init
0007 1703      00081                   bsf     STATUS,RP1 ; bank 2                          |B2
0008 019E      00082                   clrf    ANSEL      ; turn off ADC pins               |B2
0009 019F      00083                   clrf    ANSELH     ; turn off ADC pins               |B2
               00084         ;;
               00085         ;;   setup 8 MHz INTOSC
               00086         ;;
000A 1303      00087                   bcf     STATUS,RP1 ; bank 0                          |B0
000B 1683      00088                   bsf     STATUS,RP0 ; bank 1                          |B1
000C 3070      00089                   movlw   b'01110000' ; '01110000'                      |B1
000D 008F      00090                   movwf   OSCCON      ;                                 |B1
000E 00091 Stable
000E 1D0F      00092                   btfss   OSCCON,HTS ; osc stable? yes, skip, else     |B1
000F 280E      00093                   goto    Stable     ; test again                      |B1
               00094         ;;
               00095         ;;   setup ports
               00096         ;;
0010 30FF      00097                   movlw 0xFF
0011 0085      00098                   movwf TRISA   ; Make PortA all input
0012 0186      00099                   clrf    TRISB ; setup PORT B all outputs        |B1
0013 0187      00100                   clrf    TRISC ; setup PORT C all outputs        |B1
               00101         ;;
               00102         ;; Set interupts
               00103         ;; 
               00104 
0014 3020      00105                 movlw   b'00100000'
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0015 008C      00106                 movwf   PIE1
               00107         
               00108         ;;
               00109         ;;   setup UART module for 19200 baud (8 MHz Clock)
               00110         ;;
0016 3067      00111                   movlw   low(brgval) ;                                 |B1
0017 0099      00112                   movwf   SPBRG       ;                                 |B1
0018 3000      00113                   movlw   high(brgval) ;                                 |B1
0019 009A      00114                   movwf   SPBRGH       ;                                 |B1
001A 159B      00115                   bsf     BAUDCTL,BRG16 ; select 16 bit BRG               |B1
001B 3024      00116                   movlw   b'00100100'   ; '0-------' CSRC, n/a (async)    |B1
               00117         ;;  '-0------' TX9 off, 8 bits      |B1
               00118         ;;  '--1-----' TXEN, tx enabled     |B1
               00119         ;;  '---0----' SYNC, async mode     |B1
               00120         ;;  '----0---' SENDB, send brk      |B1
               00121         ;;  '-----1--' BRGH, high speed     |B1
               00122         ;;  '------00' TRMT, TX9D           |B1
001C 0098      00123                   movwf   TXSTA ;                                 |B1
001D 1283      00124                   bcf     STATUS,RP0 ; bank 0                          |B0
001E 3090      00125                   movlw   b'10010000' ; '1-------' SPEN, port enabled   |B0
               00126         ;;  '-0------' RX9 off, 8 bits      |B0
               00127         ;;  '--0-----' SREN, n/a (async)    |B0
               00128         ;;  '---1----' CREN, rx enabled     |B0
               00129         ;;  '----0---' ADDEN off            |B0
               00130         ;;  '-----000' FERR, OERR, RX9D     |B0
001F 0098      00131                   movwf   RCSTA ;                                 |B0
0020 081A      00132                   movf    RCREG,W ; flush Rx Buffer                 |B0
0021 081A      00133                   movf    RCREG,W ;                                 |B0
               00134 
               00135         ;;
               00136         ;; Set Interrupts
               00137         ;;
               00138 
0022 178B      00139                 bsf     INTCON, GIE
0023 170B      00140                 bsf     INTCON, PEIE
               00141         ;;
               00142         ;; SET RX/TX parameters
               00143         ;; 
               00144         
0024 01BB      00145         clrf    txreturn
               00146         ;;      Do not clear the adress:es, use the one that is set, read the speedbus text, "Adress handeling system!"
               00147         ;;      clrf    adress1
               00148         ;;      movlw   0x7e
               00149         ;;      movwf   adress1
               00150         ;;      movlw   0x7d
               00151         ;;      movwf   adress2
               00152         ;;      clrf    adress1         
               00153         ;;      clrf    adress2
               00154         
               00155         
0025 102F      00156         bcf     rc_gotflag,0
0026 30FA      00157         movlw   250
0027 2207      00158         call    Delay           ; Make sure that the ST485 IC circuits are started
0028 00159 main:
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0028 3003      00160         movlw   3
0029 2207      00161         call    Delay
               00162 
002A 21F3      00163         call    trd             ; Three random delays before sending broadcast
002B 283D      00164         goto    init_checkaddr
002C 00165 init_checkaddr_done:    
               00166 ;;;          btfss   PORTA,2
002C 282D      00167         goto    loopr
               00168         ;;           goto    main
               00169 
002D 00170 loopr:
002D 3003      00171         movlw   3
002E 2207      00172         call    Delay
002F 29E0      00173         goto    txporta
0030 0000      00174         nop
0031 0000      00175         nop
0032 0000      00176         nop
0033 0000      00177         nop
0034 0000      00178         nop
0035 00179 loop:
               00180         ;;      bsf     07h,0   ; turn on LED C0 (DS1)
               00181         ;;      clrf    TXREG
0035 3002      00182         movlw   2
0036 2207      00183         call    Delay
               00184         ;;      clrf    PORTC
               00185         ;;      movlw   2
               00186         ;;      call    Delay
0037 1898      00187         btfsc   RCSTA,OERR
0038 217A      00188         call recerror
0039 1805      00189         btfsc   PORTA, 0
003A 21E0      00190         call    txporta
               00191         ;;      bcf     07h,0
               00192         ;;      call    Delay
               00193         ;;      call    send
               00194         ;;      movf    RCREG,W
               00195         ;;      decfsz  d4, f   
               00196         ;;      movwf   TXREG
003B 0AAA      00197         incf    rand,F          ; Increase the random value
003C 2835      00198         goto    loop
               00199 
               00200 
003D 00201 init_checkaddr:
003D 3003      00202         movlw   3
003E 00AB      00203         movwf   loop1
               00204         
003F 00205 init_checkaddr_l:
               00206         ;; Send porta over TX
003F 3009      00207         movlw   9
0040 00B9      00208         movwf   framelen
               00209         ;; * adress
0041 0832      00210         movf    adress1,W
0042 00BC      00211         movwf   txframe 
               00212         ;; * adress
0043 0833      00213         movf    adress2,W
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0044 00BD      00214         movwf   txframe+1
               00215         ;; 0xff broadcast adress
0045 30FF      00216         movlw   0xff
0046 00BE      00217         movwf   txframe+2
               00218         ;; 0xff broadcast adress
0047 30FF      00219         movlw   0xff
0048 00BF      00220         movwf   txframe+3
               00221         ;; 0x03 control bit
0049 3003      00222         movlw   0x03
004A 00C0      00223         movwf   txframe+4
               00224         ;; 0x01 protocoll
004B 3000      00225         movlw   0x00
004C 00C1      00226         movwf   txframe+5
               00227         ;; Data
004D 3000      00228         movlw   0x00
004E 00C2      00229         movwf   txframe+6
               00230         ;; Padding bit
004F 3000      00231         movlw   0x00
0050 00C3      00232         movwf   txframe+7
               00233 
0051 143B      00234         bsf     txreturn,0
0052 21A6      00235         call    txdo
0053 103B      00236         bcf     txreturn,0
               00237         
0054 142D      00238         bsf     rc_listen,0
0055 300A      00239         movlw   10
0056 2207      00240         call    Delay
0057 182D      00241         btfsc   rc_listen,0
0058 285A      00242         goto    init_checkaddr_not_ocupied
0059 285E      00243         goto    init_checkaddr_ocupied
               00244 
005A 00245 init_checkaddr_not_ocupied:
005A 0BAB      00246         decfsz  loop1, f
005B 283F      00247         goto    init_checkaddr_l
005C 102D      00248         bcf     rc_listen,0     
005D 282C      00249         goto    init_checkaddr_done ;   Jump back to init 
               00250 
               00251         
005E 00252 init_checkaddr_ocupied:
005E 2060      00253         call    setaddr
005F 282C      00254         goto    init_checkaddr_done ;   Jump back to init
               00255 
0060 00256 setaddr:
0060 3000      00257         movlw   0x00
0061 00B2      00258         movwf   adress1
0062 3000      00259         movlw   0x00
0063 00B3      00260         movwf   adress2
               00261 
0064 00262 setaddr1:       
               00263         
0064 0FB3      00264         incfsz  adress2, f
0065 286B      00265         goto    setaddr2
               00266 
0066 3000      00267         movlw   0x00
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0067 00AC      00268         movwf   loop2
               00269 
0068 0FB2      00270         incfsz  adress1, f
0069 286B      00271         goto    setaddr2
006A 0008      00272         return                  ; ALERT!!! Change this to a rutin that show an error that no adress is availible (all ~65535 is taken)
               00273 
006B 00274 setaddr2:
               00275         ;; Send porta over TX
006B 3009      00276         movlw   9
006C 00B9      00277         movwf   framelen
               00278         ;; * adress
006D 0832      00279         movf    adress1,W
006E 00BC      00280         movwf   txframe 
               00281         ;; * adress
006F 0833      00282         movf    adress2,W
0070 00BD      00283         movwf   txframe+1
               00284         ;; 0xff broadcast adress
0071 30FF      00285         movlw   0xff
0072 00BE      00286         movwf   txframe+2
               00287         ;; 0xff broadcast adress
0073 30FF      00288         movlw   0xff
0074 00BF      00289         movwf   txframe+3
               00290         ;; 0x03 control bit
0075 3003      00291         movlw   0x03
0076 00C0      00292         movwf   txframe+4
               00293         ;; 0x01 protocoll
0077 3000      00294         movlw   0x00
0078 00C1      00295         movwf   txframe+5
               00296         ;; Data
0079 3000      00297         movlw   0x00
007A 00C2      00298         movwf   txframe+6
               00299         ;; Padding bit
007B 3000      00300         movlw   0x00
007C 00C3      00301         movwf   txframe+7
               00302 
007D 143B      00303         bsf     txreturn,0
007E 21A6      00304         call    txdo
007F 103B      00305         bcf     txreturn,0
0080 142D      00306         bsf     rc_listen,0
0081 3001      00307         movlw   1
0082 2207      00308         call    Delay
0083 182D      00309         btfsc   rc_listen,0
0084 2886      00310         goto    setaddr_testloop
0085 2864      00311         goto    setaddr1
               00312 
               00313         
0086 00314 setaddr_testloop:               ; Send this rutine another 2 times, to make sure that the previus packet not was droped
0086 3002      00315         movlw   2
0087 00AB      00316         movwf   loop1
0088 00317 setaddr_testloop_l:     
0088 143B      00318         bsf     txreturn,0
0089 21A6      00319         call    txdo
008A 103B      00320         bcf     txreturn,0
008B 142D      00321         bsf     rc_listen,0
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008C 3001      00322         movlw   1
008D 2207      00323         call    Delay
008E 1C2D      00324         btfss   rc_listen,0
008F 2864      00325         goto    setaddr1
0090 0BAB      00326         decfsz  loop1,  f
0091 2888      00327         goto    setaddr_testloop_l
0092 0008      00328         return                  ; The adress sems nice! Returning, and keep the composed adress!
               00329         
               00330         
               00331         
0093 00332 intserv:
0093 00A4      00333         movwf   tmp_W           ;       Register BKP before the interup code exec
0094 0803      00334         movf    STATUS,W
0095 0183      00335         clrf    STATUS
0096 00A5      00336         movwf   tmp_STATUS
0097 080A      00337         movf    PCLATH,W
0098 00A6      00338         movwf   tmp_PCLATH
0099 0820      00339         movf    d1,W
009A 00A7      00340         movwf   d1_tmp
009B 0821      00341         movf    d2,W
009C 00A8      00342         movwf   d2_tmp
009D 0822      00343         movf    d3,W
009E 00A9      00344         movwf   d3_tmp
009F 1A8C      00345         btfsc   PIR1,RCIF       ;       Check if the recived data bit is set
00A0 28AE      00346         goto    rec             ;       Jump to recive data rutine if the PIR1 bit is 1
               00347 
00A1 00348 restore:                        ;       Restore the regisers
00A1 0827      00349         movf    d1_tmp,W
00A2 00A0      00350         movwf   d1
00A3 0828      00351         movf    d2_tmp,W
00A4 00A1      00352         movwf   d2
00A5 0829      00353         movf    d3_tmp,W
00A6 00A2      00354         movwf   d3      
00A7 0826      00355         movf    tmp_PCLATH,W
00A8 008A      00356         movwf   PCLATH
00A9 0825      00357         movf    tmp_STATUS,W
00AA 0083      00358         movwf   STATUS
00AB 0EA4      00359         swapf   tmp_W,F
00AC 0E24      00360         swapf   tmp_W,W
00AD 0009      00361         retfie
               00362         
               00363 
00AE 00364 rec:
00AE 1CAD      00365         btfss   rc_listen,1             ; If rc_listen is set to NOT drop the loopback package, jump directly to the rec_start
00AF 28B9      00366         goto    rec_start               
               00367 
00B0 10AD      00368         bcf     rc_listen,1             ;; Start this rutine with checking that the recived bit NOT was send from this own device
00B1 0830      00369         movf    rc_nocoll,W
00B2 021A      00370         subwf   RCREG,W
00B3 1D03      00371         btfss   STATUS,Z
00B4 28B6      00372         goto    rec_oops_coll           ; Anyway, if the rc_listen,1  is 1, and it do not match RCREG, we may be detected an collission
00B5 28A1      00373         goto    restore
00B6 00374 rec_oops_coll:
00B6 1407      00375         bsf     PORTC,0
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B7 14BB      00376         bsf     txreturn,1
00B8 28A1      00377         goto    restore
               00378         
00B9 00379 rec_start
00B9 307E      00380         movlw   0x7e
00BA 021A      00381         subwf   RCREG,W
00BB 1903      00382         btfsc   STATUS,Z
00BC 28C0      00383         goto    recx            ; Jump if this is a flag bit
00BD 182F      00384         btfsc   rc_gotflag,0
00BE 28C6      00385         goto    recsave         ; Jump if the flag bit is set
00BF 28C5      00386         goto    recr
00C0 00387 recx:   
00C0 182F      00388         btfsc   rc_gotflag,0
00C1 28E7      00389         goto    recend          ; If this may be end flag, check the package, finalize, check crc
00C2 142F      00390         bsf     rc_gotflag,0    ; Else set the gotflag, and start recording package!
00C3 01AE      00391         clrf    rc_counter      ; Clear the counter :)
00C4 28A1      00392         goto    restore
00C5 00393 recr:   
               00394         ;       movf    RCREG,W
               00395         ;       movwf   TXREG           
00C5 28A1      00396         goto    restore
               00397 
00C6 00398 recsave:
00C6 307D      00399         movlw   0x7d
00C7 021A      00400         subwf   RCREG,W
00C8 1903      00401         btfsc   STATUS,Z
00C9 28CE      00402         goto    recsave_set     ; Set bit in the rc_listen to aktivate escape routines when the next byte is recived
00CA 192D      00403         btfsc   rc_listen,2
00CB 28D0      00404         goto    recsave_unescape
               00405 
00CC 081A      00406         movf    RCREG,W
00CD 28DE      00407         goto    recsave_add
               00408 
00CE 00409 recsave_set:
00CE 152D      00410         bsf     rc_listen,2
00CF 28A1      00411         goto    restore
               00412 
00D0 00413 recsave_unescape:
00D0 112D      00414         bcf     rc_listen,2
00D1 305E      00415         movlw   0x5e
00D2 021A      00416         subwf   RCREG,W
00D3 1903      00417         btfsc   STATUS,Z
00D4 28DA      00418         goto    recsave_unescape_1
00D5 305D      00419         movlw   0x5d
00D6 021A      00420         subwf   RCREG,W
00D7 1903      00421         btfsc   STATUS,Z
00D8 28DC      00422         goto    recsave_unescape_2
00D9 28A1      00423         goto    restore         ; Maybe you can change this, but a fail package that is the result, will also be CRC checked
               00424         
00DA 00425 recsave_unescape_1:
00DA 307E      00426         movlw   0x7e
00DB 28DE      00427         goto    recsave_add
00DC 00428 recsave_unescape_2:
00DC 307D      00429         movlw   0x7d
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00DD 28DE      00430         goto    recsave_add
               00431         
00DE 00432 recsave_add:
00DE 00B1      00433         movwf   rc_add_byte
00DF 3051      00434         movlw   rcframe         ; Place where to put the receiving byte
00E0 072E      00435         addwf   rc_counter,W    ; Add the number in rc_flow, to the pointer, like rcframe[rc_flow] 
00E1 0084      00436         movwf   FSR
00E2 0831      00437         movf    rc_add_byte,W
00E3 0080      00438         movwf   INDF
00E4 0A2E      00439         incf    rc_counter,W
00E5 00AE      00440         movwf   rc_counter
00E6 28A1      00441         goto    restore
               00442         
00E7 00443 recend:
00E7 032E      00444         decf    rc_counter,W
00E8 00AE      00445         movwf   rc_counter
00E9 00B7      00446         movwf   crcloop
00EA 3051      00447         movlw   rcframe
00EB 0084      00448         movwf   FSR
00EC 01B5      00449         clrf    crc0
00ED 01B6      00450         clrf    crc1
00EE 21AF      00451         call    crcloopr        ; Call CRC function
               00452 
               00453 
00EF 3051      00454         movlw   rcframe
00F0 072E      00455         addwf   rc_counter,W
00F1 0084      00456         movwf   FSR
               00457         
00F2 0800      00458         movf    INDF,W
00F3 0236      00459         subwf   crc1,W
00F4 1D03      00460         btfss   STATUS,Z
00F5 2976      00461         goto    reccrcfail
               00462 
00F6 0304      00463         decf    FSR,W
00F7 0084      00464         movwf   FSR
               00465         
00F8 0800      00466         movf    INDF,W
00F9 0235      00467         subwf   crc0,W
00FA 1D03      00468         btfss   STATUS,Z
00FB 2976      00469         goto    reccrcfail
               00470 
               00471         
               00472         ;; fix so that the cheksum is check:ed and do things ;)
               00473 
               00474         ;; REMEMBER, if checksum is right, clear rc_gotflag, else, untuched
00FC 102F      00475         bcf     rc_gotflag,0
               00476 
00FD 3057      00477         movlw   rcframe+6       ; Move recived byte to W
00FE 0084      00478         movwf   FSR
               00479 
               00480 
00FF 3000      00481         movlw   0x00            ; Just check, recive broadcast
0100 0200      00482         subwf   INDF,W
0101 1903      00483         btfsc   STATUS,Z
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0102 291E      00484         goto    func_is_ocupied
               00485         
               00486 
0103 3001      00487         movlw   0x01
0104 0200      00488         subwf   INDF,W
0105 1903      00489         btfsc   STATUS,Z
0106 2947      00490         goto    func_bc
               00491 
0107 00492 recend_no_broadcast:
               00493 
0107 3051      00494         movlw   rcframe
0108 0084      00495         movwf   FSR
0109 0800      00496         movf    INDF,W          ; Check so that the adress is destinated for me
010A 0232      00497         subwf   adress1,W
010B 1D03      00498         btfss   STATUS,Z
010C 28A1      00499         goto    restore
010D 0A04      00500         incf    FSR,W
010E 0084      00501         movwf   FSR
010F 0800      00502         movf    INDF,W
0110 0233      00503         subwf   adress2,W
0111 1D03      00504         btfss   STATUS,Z
0112 28A1      00505         goto    restore
               00506 
0113 3057      00507         movlw   rcframe+6       ; Move recived byte to W
0114 0084      00508         movwf   FSR
               00509         
               00510         
0115 3000      00511         movlw   0x00            ; Send respons for, 0x00 message, destionated for me
0116 0200      00512         subwf   INDF,W
0117 1903      00513         btfsc   STATUS,Z
0118 292F      00514         goto    func_is_ocupied_send_response
               00515         
0119 3002      00516         movlw   0x02
011A 0200      00517         subwf   INDF,W
011B 1903      00518         btfsc   STATUS,Z
011C 2971      00519         goto    func_setport
               00520         
011D 28A1      00521         goto    restore
               00522 
011E 00523 func_is_ocupied:
011E 182D      00524         btfsc   rc_listen,0
011F 2921      00525         goto    func_is_ocupied_recived_ocupied
0120 2907      00526         goto    recend_no_broadcast
               00527 
               00528 
0121 00529 func_is_ocupied_recived_ocupied:        
0121 3053      00530         movlw   rcframe+2               ;       move four bit:s backward, to the src addr
0122 0084      00531         movwf   FSR
               00532 
0123 0832      00533         movf    adress1,W               ;       check src adress1
0124 0200      00534         subwf   INDF,W
0125 1D03      00535         btfss   STATUS,Z
0126 28A1      00536         goto    restore
               00537 
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0127 0A04      00538         incf    FSR,W           ;       Increase the address    
0128 0084      00539         movwf   FSR
               00540 
0129 0833      00541         movf    adress2,W               ;       check src adress2
012A 0200      00542         subwf   INDF,W
012B 1D03      00543         btfss   STATUS,Z
012C 28A1      00544         goto    restore
               00545 
012D 102D      00546         bcf     rc_listen,0
012E 28A1      00547         goto    restore
               00548 
               00549         
012F 00550 func_is_ocupied_send_response:
012F 3014      00551         movlw   20              ; Pretty strange, but you need this, so no colission or somthing will be made betwen PC and ansoring device
0130 2207      00552         call    Delay
               00553         ;; Send Package:
               00554         
0131 3009      00555         movlw   9
0132 00B9      00556         movwf   framelen
               00557         ;; 0xff broadcast dst adress
0133 30FF      00558         movlw   0xff
0134 00BC      00559         movwf   txframe
               00560         ;; 0xff broadcast dst adress
0135 30FF      00561         movlw   0xff
0136 00BD      00562         movwf   txframe+1
               00563         ;; * my own src adress
0137 0832      00564         movf    adress1, W
0138 00BE      00565         movwf   txframe+2
               00566         ;; * my own src adress
0139 0833      00567         movf    adress2, W
013A 00BF      00568         movwf   txframe+3
               00569         ;; 0x03 control bit
013B 3003      00570         movlw   0x03
013C 00C0      00571         movwf   txframe+4
               00572         ;; 0x01 protocoll
013D 3001      00573         movlw   0x01
013E 00C1      00574         movwf   txframe+5
               00575         ;; Data
013F 3000      00576         movlw   0x00
0140 00C2      00577         movwf   txframe+6
               00578         ;; Padding bit
0141 3000      00579         movlw   0x00
0142 00C3      00580         movwf   txframe+7
               00581         
               00582         ;; This is a broadcast package with adress on it
0143 143B      00583         bsf     txreturn,0
0144 21A6      00584         call    txdo    
0145 103B      00585         bcf     txreturn,0
0146 28A1      00586         goto    restore
               00587 
               00588         
0147 00589 func_bc:
0147 3053      00590         movlw   rcframe+2       ;       move six bit:s backward, to the dst addr
0148 0084      00591         movwf   FSR
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00592 
0149 0800      00593         movf    INDF,W
014A 0099      00594         movwf   TXREG
               00595         
014B 30FF      00596         movlw   0xFF            ;       check src adress1
014C 0200      00597         subwf   INDF,W
014D 1D03      00598         btfss   STATUS,Z
014E 28A1      00599         goto    restore
               00600         
014F 0A04      00601         incf    FSR,W           ;       Increase the address    
0150 0084      00602         movwf   FSR
               00603 
0151 30FF      00604         movlw   0xFF            ;       check src adress2       
0152 0200      00605         subwf   INDF,W
0153 1D03      00606         btfss   STATUS,Z
0154 28A1      00607         goto    restore
               00608         
0155 2956      00609         goto    func_bc_sendaddr
               00610                 
               00611         
0156 00612 func_bc_sendaddr:       
               00613 
0156 21F3      00614         call    trd      ; Three random delay:s before ansor broadcast
               00615         
               00616         ;; Send Package:
               00617         
0157 300B      00618         movlw   11
0158 00B9      00619         movwf   framelen
               00620         ;; 0xff broadcast dst adress
0159 30FF      00621         movlw   0xff
015A 00BC      00622         movwf   txframe
               00623         ;; 0xff broadcast dst adress
015B 30FF      00624         movlw   0xff
015C 00BD      00625         movwf   txframe+1
               00626         ;; * my own src adress
015D 0832      00627         movf    adress1, W
015E 00BE      00628         movwf   txframe+2
               00629         ;; * my own src adress
015F 0833      00630         movf    adress2, W
0160 00BF      00631         movwf   txframe+3
               00632         ;; 0x03 control bit
0161 3003      00633         movlw   0x03
0162 00C0      00634         movwf   txframe+4
               00635         ;; 0x01 protocoll
0163 3001      00636         movlw   0x01
0164 00C1      00637         movwf   txframe+5
               00638         ;; Data
0165 3001      00639         movlw   0x01
0166 00C2      00640         movwf   txframe+6
               00641 ;;;  DEvice ID 0x0001
0167 3000      00642         movlw   0x00
0168 00C3      00643         movwf   txframe+7
               00644         ;;  Data
0169 3001      00645         movlw   0x01
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
016A 00C4      00646         movwf   txframe+8
               00647         ;; Padding bit
016B 3000      00648         movlw   0x00
016C 00C5      00649         movwf   txframe+9
               00650 
               00651         
               00652         ;; This is a broadcast package with adress on it
016D 143B      00653         bsf     txreturn,0
016E 21A6      00654         call    txdo
               00655         
               00656 
016F 00657 func_bc_sended_packet:
016F 103B      00658         bcf     txreturn,0
0170 28A1      00659         goto    restore
               00660 
0171 00661 func_setport:
0171 3002      00662         movlw   2
0172 0784      00663         addwf   FSR,F
0173 0800      00664         movf    INDF,W
0174 0087      00665         movwf   PORTC
0175 28A1      00666         goto restore
               00667         
0176 00668 reccrcfail:
               00669         ;; Because that this happend directrly after a crc-fail, here we need to clear the counter, so the newxt comming package will start allover
0176 01AE      00670         clrf    rc_counter
               00671         ;; Do somthing
0177 3001      00672         movlw    B'00000001'    ;toggle bit3
0178 0687      00673         xorwf    PORTC,F
0179 28A1      00674         goto    restore
               00675         
017A 00676 recerror:
               00677         ;; Do somthing
017A 1218      00678         bcf     RCSTA,CREN
017B 1618      00679         bsf     RCSTA,CREN
017C 0008      00680         return
017D 00681 txoops:                         ; Colisson has ocurred
017D 10BB      00682         bcf     txreturn,1
017E 21FD      00683         call    lfsr
017F 082A      00684         movf    rand,W
0180 2207      00685         call    Delay
0181 29C7      00686         goto    txdo2
               00687 
0182 00688 tx_send:
0182 00BA      00689         movwf   txtmp
0183 307E      00690         movlw   0x7e            
0184 023A      00691         subwf   txtmp,W         
0185 1903      00692         btfsc   STATUS,Z
0186 299C      00693         goto    tx_send_escape_1
               00694 
0187 307D      00695         movlw   0x7d
0188 023A      00696         subwf   txtmp,W
0189 1903      00697         btfsc   STATUS,Z
018A 29A1      00698         goto    tx_send_escape_2
018B 083A      00699         movf    txtmp,W
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00700         
018C 00701 tx_send_noescape:       
018C 00BA      00702         movwf   txtmp
018D 1683      00703         bsf     STATUS,RP0      ;bank 1                          |B1
018E 1C98      00704         btfss   TXSTA,TRMT
018F 298E      00705         goto    $-1
0190 1283      00706         bcf     STATUS,RP0 ; bank 1                          |B1 
0191 3001      00707         movlw   1
0192 2207      00708         call    Delay
0193 083A      00709         movf    txtmp,W
0194 14AD      00710         bsf     rc_listen, 1
0195 00B0      00711         movwf   rc_nocoll
0196 0099      00712         movwf   TXREG
0197 3001      00713         movlw   1
0198 2207      00714         call    Delay
0199 18BB      00715         btfsc   txreturn,1
019A 297D      00716         goto    txoops
019B 0008      00717         return
               00718 
019C 00719 tx_send_escape_1:
019C 307D      00720         movlw   0x7d
019D 218C      00721         call    tx_send_noescape
019E 305E      00722         movlw   0x5e
019F 218C      00723         call    tx_send_noescape
01A0 0008      00724         return
               00725 
01A1 00726 tx_send_escape_2:
01A1 307D      00727         movlw   0x7d
01A2 218C      00728         call    tx_send_noescape
01A3 305D      00729         movlw   0x5d
01A4 218C      00730         call    tx_send_noescape
01A5 0008      00731         return
               00732         
               00733 
01A6 00734 txdo:                           ; This is like the funktion argumnents, they need to be set at every presense of crcloopr
               00735         ;; Set TX enable
01A6 1606      00736         bsf     PORTB,4
               00737         ;; 
01A7 0839      00738         movf    framelen,W
01A8 00B7      00739         movwf   crcloop
01A9 303C      00740         movlw   txframe
01AA 0084      00741         movwf   FSR
01AB 01B5      00742         clrf    crc0
01AC 01B6      00743         clrf    crc1
01AD 21AF      00744         call    crcloopr
01AE 29C7      00745         goto    txdo2
01AF 00746 crcloopr:
01AF 0BB7      00747         decfsz  crcloop, f
01B0 29B2      00748         goto    crccalc
01B1 0008      00749         return
               00750 
01B2 00751 crccalc:        
01B2 0800      00752         movf  INDF,W            ;;load w with next databyte
01B3 0636      00753         xorwf crc1,W            ;;(a^x):(b^y)
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01B4 00B8      00754         movwf crctmp            ;;
01B5 39F0      00755         andlw 0xf0              ;; W = (a^x):0
01B6 0EB8      00756         swapf crctmp,F          ;; Index = (b^y):(a^x)
01B7 06B8      00757         xorwf crctmp,F          ;; Index = (a^b^x^y):(a^x) = i2:i1
               00758 
               00759                                 ;; High byte
01B8 0838      00760         movf  crctmp,W
01B9 39F0      00761         andlw 0xf0
01BA 0635      00762         xorwf crc0,W
01BB 00B6      00763         movwf crc1
               00764 
01BC 0D38      00765         rlf  crctmp,W           ;; use rlf for PIC16
01BD 0D38      00766         rlf  crctmp,W           ;; use rlf for PIC16
01BE 06B6      00767         xorwf crc1,F
01BF 39E0      00768         andlw 0xe0
01C0 06B6      00769         xorwf crc1,F
               00770 
01C1 0EB8      00771         swapf crctmp,F
01C2 0638      00772         xorwf crctmp,W
01C3 00B5      00773         movwf crc0
01C4 0A04      00774         incf    FSR,W
01C5 0084      00775         movwf   FSR
01C6 29AF      00776         goto crcloopr
               00777 
01C7 00778 txdo2:
01C7 307E      00779         movlw   0x7e
01C8 218C      00780         call    tx_send_noescape
01C9 303C      00781         movlw   txframe
01CA 0084      00782         movwf   FSR
01CB 0839      00783         movf    framelen,W
01CC 00B7      00784         movwf   crcloop
01CD 00785 send:
01CD 0BB7      00786         decfsz  crcloop,f
01CE 29D0      00787         goto    lopp
01CF 29D5      00788         goto    crcsend
01D0 00789 lopp:
01D0 0800      00790         movf    INDF,W
01D1 2182      00791         call    tx_send
01D2 0A04      00792         incf    FSR,W
01D3 0084      00793         movwf   FSR
01D4 29CD      00794         goto    send
               00795 
01D5 00796 crcsend:
01D5 0835      00797         movf    crc0,W
01D6 2182      00798         call    tx_send
01D7 0836      00799         movf    crc1,W
01D8 2182      00800         call    tx_send
01D9 29DA      00801         goto    endflag
               00802 
01DA 00803 endflag:
01DA 307E      00804         movlw   0x7e
01DB 218C      00805         call    tx_send_noescape
               00806         ;; Disable TX enable
01DC 1206      00807         bcf     PORTB,4
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00808         ;; 
01DD 1C3B      00809         btfss   txreturn,0
01DE 2835      00810         goto    loop    
01DF 0008      00811         return
               00812         
               00813         
01E0 00814 txporta:
               00815         ;; Send porta over TX
01E0 3009      00816         movlw   9
01E1 00B9      00817         movwf   framelen
               00818         ;; 0xff broadcast adress
01E2 30FF      00819         movlw   0xFF
01E3 00BC      00820         movwf   txframe 
               00821         ;; 0xff broadcas, adress
01E4 30FF      00822         movlw   0xFF
01E5 00BD      00823         movwf   txframe+1
               00824         ;; 0xff broadcast adress
01E6 0832      00825         movf    adress1,W
01E7 00BE      00826         movwf   txframe+2
               00827         ;; 0xff broadcast adress
01E8 0833      00828         movf    adress2,W
01E9 00BF      00829         movwf   txframe+3
               00830         ;; 0x03 control bit
01EA 3003      00831         movlw   0x03
01EB 00C0      00832         movwf   txframe+4
               00833         ;; 0x01 protocoll
01EC 3001      00834         movlw   0x01
01ED 00C1      00835         movwf   txframe+5
               00836         ;; Data
01EE 0805      00837         movf    PORTA,W
01EF 00C2      00838         movwf   txframe+6
               00839         ;; Padding bit
01F0 3000      00840         movlw   0x00
01F1 00BC      00841         movwf   txframe
               00842 
               00843         
01F2 29A6      00844         goto txdo
               00845 
01F3 00846 trd:    
01F3 21FD      00847         call    lfsr            ; Three random delays before sending broadcast
01F4 082A      00848         movf    rand,W
01F5 2207      00849         call    Delay
01F6 21FD      00850         call    lfsr
01F7 082A      00851         movf    rand,W
01F8 2207      00852         call    Delay
01F9 21FD      00853         call    lfsr
01FA 082A      00854         movf    rand,W
01FB 2207      00855         call    Delay
01FC 0008      00856         return
               00857         
01FD 00858 lfsr:
01FD 0D2A      00859         rlf     rand,W
01FE 0D2A      00860         rlf     rand,W
01FF 1A2A      00861         btfsc   rand,4
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0200 3A01      00862         xorlw   1
0201 1AAA      00863         btfsc   rand,5
0202 3A01      00864         xorlw   1
0203 19AA      00865         btfsc   rand,3
0204 3A01      00866         xorlw   1
0205 00AA      00867         movwf   rand
0206 3400      00868         retlw   0
               00869         
0207 00870 Delay:
               00871         ;; 499994 cycles
0207 00A2      00872         movwf   d3
0208 30FF      00873         movlw   0xFF
0209 00A1      00874         movwf   d2
020A 3032      00875         movlw   50
020B 00A0      00876         movwf   d1
020C 00877 Delay_0:
020C 0BA0      00878         decfsz  d1, f
020D 2A0C      00879         goto    $-1
020E 3014      00880         movlw   20              ; Need this for tuning
020F 00A0      00881         movwf   d1
0210 0BA1      00882         decfsz  d2, f
0211 2A0B      00883         goto    $-6
0212 3064      00884         movlw   100
0213 00A1      00885         movwf   d2
0214 0BA2      00886         decfsz  d3, f
0215 2A0C      00887         goto    Delay_0
0216 0008      00888         return
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             0000011E
ANSELH                            0000011F
BAUDCTL                           0000009B
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1SEN                             00000005
C1VREN                            00000007
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2SYNC                            00000000
C2VREN                            00000006
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCPR1H                            00000016
CCPR1L                            00000015
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CM1CON0                           00000119
CM2CON0                           0000011A
CM2CON1                           0000011B
CREN                              00000004
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
D_A                               00000005
Delay                             00000207
Delay_0                           0000020C
ECCPAS                            0000001D
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
HTS                               00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOC                               00000096
IOC0                              00000000
IOC1                              00000001
IOC2                              00000002
IOC3                              00000003
IOC4                              00000004
IOC5                              00000005
IOCA                              00000096
IOCA0                             00000000
IOCA1                             00000001
IOCA2                             00000002
IOCA3                             00000003
IOCA4                             00000004
IOCA5                             00000005
IOCB                              00000116
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
Init                              00000007
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MSK                               00000093
NOT_A                             00000005
NOT_ADDRESS                       00000005
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RABPU                         00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PR2                               00000092
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000019D
PULSR                             00000002
PULSS                             00000003
PWM1CON                           0000001C
R                                 00000002
RABIE                             00000003
RABIF                             00000000
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SENB                              00000003
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             0000019E
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SWDTEN                            00000000
SYNC                              00000004
Stable                            0000000E
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
T1GINV                            00000007
T1GSS                             00000001
T1IE                              00000000
T1IF                              00000000
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
T2IE                              00000001
T2IF                              00000001
TMR0                              00000001
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX9                               00000006
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
VCFG                              00000006
VP6EN                             00000004
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000118
VRR                               00000005
W                                 00000000
WCOL                              00000007
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPU                               00000095
WPUA                              00000095
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA4                             00000004
WPUA5                             00000005
WPUB                              00000115
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_XT_OSC                           00003FF9
__16F690                          00000001
adress1                           00000032
adress2                           00000033
baud                              00004B00
brgdiv                            00000004
brgval                            00000067
clock                             00000008
crc0                              00000035
crc1                              00000036
crccalc                           000001B2
crcloop                           00000037
crcloopr                          000001AF
crcsend                           000001D5
crctmp                            00000038
d1                                00000020
d1_tmp                            00000027
d2                                00000021
d2_tmp                            00000028
d3                                00000022
d3_tmp                            00000029
d4                                00000023
endflag                           000001DA
framelen                          00000039
func_bc                           00000147
func_bc_sendaddr                  00000156
func_bc_sended_packet             0000016F
func_is_ocupied                   0000011E
func_is_ocupied_recived_ocupied   00000121
func_is_ocupied_send_response     0000012F
func_setport                      00000171
init_checkaddr                    0000003D
init_checkaddr_done               0000002C
init_checkaddr_l                  0000003F
init_checkaddr_not_ocupied        0000005A
init_checkaddr_ocupied            0000005E
intserv                           00000093
lfsr                              000001FD
loop                              00000035
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
loop1                             0000002B
loop2                             0000002C
loopr                             0000002D
lopp                              000001D0
main                              00000028
rand                              0000002A
rc1                               00000052
rc10                              0000005B
rc11                              0000005C
rc12                              0000005D
rc13                              0000005E
rc14                              0000005F
rc15                              00000060
rc16                              00000061
rc17                              00000062
rc18                              00000063
rc19                              00000064
rc2                               00000053
rc20                              00000065
rc3                               00000054
rc4                               00000055
rc5                               00000056
rc6                               00000057
rc7                               00000058
rc8                               00000059
rc9                               0000005A
rc_add_byte                       00000031
rc_counter                        0000002E
rc_gotflag                        0000002F
rc_listen                         0000002D
rc_nocoll                         00000030
rcframe                           00000051
rec                               000000AE
rec_oops_coll                     000000B6
rec_start                         000000B9
reccrcfail                        00000176
recend                            000000E7
recend_no_broadcast               00000107
recerror                          0000017A
recr                              000000C5
recsave                           000000C6
recsave_add                       000000DE
recsave_set                       000000CE
recsave_unescape                  000000D0
recsave_unescape_1                000000DA
recsave_unescape_2                000000DC
recx                              000000C0
restore                           000000A1
send                              000001CD
sendc                             00000034
setaddr                           00000060
setaddr1                          00000064
setaddr2                          0000006B
setaddr_testloop                  00000086
gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
setaddr_testloop_l                00000088
tmp_PCLATH                        00000026
tmp_STATUS                        00000025
tmp_W                             00000024
trd                               000001F3
tx1                               0000003D
tx10                              00000046
tx11                              00000047
tx12                              00000048
tx13                              00000049
tx14                              0000004A
tx15                              0000004B
tx16                              0000004C
tx17                              0000004D
tx18                              0000004E
tx19                              0000004F
tx2                               0000003E
tx20                              00000050
tx3                               0000003F
tx4                               00000040
tx5                               00000041
tx6                               00000042
tx7                               00000043
tx8                               00000044
tx9                               00000045
tx_send                           00000182
tx_send_escape_1                  0000019C
tx_send_escape_2                  000001A1
tx_send_noescape                  0000018C
txdo                              000001A6
txdo2                             000001C7
txframe                           0000003C
txoops                            0000017D
txporta                           000001E0
txreturn                          0000003B
txtmp                             0000003A
v_reset                           00000005


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

00000000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
000000c0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
000001c0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000200 : XXXXXXXXXXXXXXXX XXXXXXX--------- ---------------- ----------------
00002000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

gpasm-0.13.7 beta               toggle_led/toggle_led.asm6-21-2012  22:23:14          PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
Program Memory Words Used: 533


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,      13 suppressed

